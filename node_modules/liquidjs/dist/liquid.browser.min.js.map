{"version":3,"file":"liquid.browser.min.js","sources":["../src/drop/drop.ts","../src/util/underscore.ts","../src/cache/lru.ts","../src/fs/browser.ts","../src/drop/comparable.ts","../src/render/boolean.ts","../src/render/operator.ts","../src/util/character.ts","../src/util/operator-trie.ts","../src/liquid-options.ts","../src/util/error.ts","../src/fs/loader.ts","../src/context/context.ts","../src/emitters/simple-emitter.ts","../src/emitters/streamed-emitter-browser.ts","../src/util/async.ts","../src/emitters/keeping-type-emitter.ts","../src/render/render.ts","../src/parser/token-kind.ts","../src/util/type-guards.ts","../src/parser/parse-stream.ts","../src/template/template-impl.ts","../src/util/assert.ts","../src/drop/null-drop.ts","../src/drop/empty-drop.ts","../src/drop/blank-drop.ts","../src/util/literal.ts","../src/parser/parse-string-literal.ts","../src/render/expression.ts","../src/tokens/token.ts","../src/tokens/delimited-token.ts","../src/parser/whitespace-ctrl.ts","../src/tokens/number-token.ts","../src/tokens/identifier-token.ts","../src/tokens/literal-token.ts","../src/tokens/operator-token.ts","../src/tokens/property-access-token.ts","../src/tokens/filter-token.ts","../src/tokens/hash-token.ts","../src/tokens/quoted-token.ts","../src/tokens/html-token.ts","../src/tokens/range-token.ts","../src/tokens/output-token.ts","../src/parser/tokenizer.ts","../src/parser/match-operator.ts","../src/tokens/tag-token.ts","../src/template/tag/hash.ts","../src/template/filter/filter.ts","../src/parser/filter-arg.ts","../src/template/value.ts","../src/template/tag/tag.ts","../src/template/output.ts","../src/template/html.ts","../src/parser/parser.ts","../src/builtin/tags/assign.ts","../src/util/collection.ts","../src/drop/forloop-drop.ts","../src/builtin/tags/for.ts","../src/builtin/tags/capture.ts","../src/context/block-mode.ts","../src/builtin/tags/case.ts","../src/builtin/tags/comment.ts","../src/builtin/tags/render.ts","../src/builtin/tags/include.ts","../src/builtin/tags/decrement.ts","../src/builtin/tags/cycle.ts","../src/builtin/tags/if.ts","../src/builtin/tags/increment.ts","../src/builtin/tags/layout.ts","../src/drop/block-drop.ts","../src/builtin/tags/block.ts","../src/builtin/tags/raw.ts","../src/drop/tablerowloop-drop.ts","../src/builtin/tags/index.ts","../src/builtin/tags/tablerow.ts","../src/builtin/tags/unless.ts","../src/builtin/tags/break.ts","../src/builtin/tags/continue.ts","../src/builtin/filters/html.ts","../src/builtin/filters/math.ts","../src/util/strftime.ts","../src/util/timezone-date.ts","../src/builtin/filters/url.ts","../src/builtin/filters/array.ts","../src/builtin/filters/date.ts","../src/builtin/filters/object.ts","../src/builtin/filters/string.ts","../src/template/tag/tag-map.ts","../src/template/filter/filter-map.ts","../src/liquid.ts"],"sourcesContent":["export abstract class Drop {\n  public valueOf (): any {\n    return undefined\n  }\n\n  public liquidMethodMissing (key: string): Promise<string | undefined> | string | undefined {\n    return undefined\n  }\n}\n","import { Drop } from '../drop/drop'\n\nconst toStr = Object.prototype.toString\nconst toLowerCase = String.prototype.toLowerCase\n\nexport function isString (value: any): value is string {\n  return typeof value === 'string'\n}\n\nexport function isFunction (value: any): value is Function {\n  return typeof value === 'function'\n}\n\nexport function promisify<T1, T2> (fn: (arg1: T1, cb: (err: Error | null, result: T2) => void) => void): (arg1: T1) => Promise<T2>;\nexport function promisify<T1, T2, T3> (fn: (arg1: T1, arg2: T2, cb: (err: Error | null, result: T3) => void) => void): (arg1: T1, arg2: T2) => Promise<T3>;\nexport function promisify (fn: any) {\n  return function (...args: any[]) {\n    return new Promise((resolve, reject) => {\n      fn(...args, (err: Error, result: any) => {\n        err ? reject(err) : resolve(result)\n      })\n    })\n  }\n}\n\nexport function stringify (value: any): string {\n  value = toValue(value)\n  if (isString(value)) return value\n  if (isNil(value)) return ''\n  return String(value)\n}\n\nexport function toValue (value: any): any {\n  return value instanceof Drop ? value.valueOf() : value\n}\n\nexport function isNumber (value: any): value is number {\n  return typeof value === 'number'\n}\n\nexport function toLiquid (value: any): any {\n  if (value && isFunction(value.toLiquid)) return toLiquid(value.toLiquid())\n  return value\n}\n\nexport function isNil (value: any): boolean {\n  return value == null\n}\n\nexport function isArray (value: any): value is any[] {\n  // be compatible with IE 8\n  return toStr.call(value) === '[object Array]'\n}\n\n/*\n * Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property.\n * The iteratee is invoked with three arguments: (value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning false.\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @return {Object} Returns object.\n */\nexport function forOwn <T> (\n  object: {[key: string]: T} | undefined,\n  iteratee: ((val: T, key: string, obj: {[key: string]: T}) => boolean | void)\n) {\n  object = object || {}\n  for (const k in object) {\n    if (object.hasOwnProperty(k)) {\n      if (iteratee(object[k], k, object) === false) break\n    }\n  }\n  return object\n}\n\nexport function last <T>(arr: T[]): T;\nexport function last (arr: string): string;\nexport function last (arr: any[] | string): any | string {\n  return arr[arr.length - 1]\n}\n\n/*\n * Checks if value is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, new Number(0), and new String(''))\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is an object, else false.\n */\nexport function isObject (value: any): value is object {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\nexport function range (start: number, stop: number, step = 1) {\n  const arr: number[] = []\n  for (let i = start; i < stop; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function padStart (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => ch + str)\n}\n\nexport function padEnd (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => str + ch)\n}\n\nexport function pad (str: any, length: number, ch: string, add: (str: string, ch: string) => string) {\n  str = String(str)\n  let n = length - str.length\n  while (n-- > 0) str = add(str, ch)\n  return str\n}\n\nexport function identify<T> (val: T): T {\n  return val\n}\n\nexport function snakeCase (str: string) {\n  return str.replace(\n    /(\\w?)([A-Z])/g,\n    (_, a, b) => (a ? a + '_' : '') + b.toLowerCase()\n  )\n}\n\nexport function changeCase (str: string): string {\n  const hasLowerCase = [...str].some(ch => ch >= 'a' && ch <= 'z')\n  return hasLowerCase ? str.toUpperCase() : str.toLowerCase()\n}\n\nexport function ellipsis (str: string, N: number): string {\n  return str.length > N ? str.substr(0, N - 3) + '...' : str\n}\n\n// compare string in case-insensitive way, undefined values to the tail\nexport function caseInsensitiveCompare (a: any, b: any) {\n  if (a == null && b == null) return 0\n  if (a == null) return 1\n  if (b == null) return -1\n  a = toLowerCase.call(a)\n  b = toLowerCase.call(b)\n  if (a < b) return -1\n  if (a > b) return 1\n  return 0\n}\n","import { Cache } from './cache'\n\nclass Node<T> {\n  constructor (\n    public key: string,\n    public value: T,\n    public next: Node<T>,\n    public prev: Node<T>\n  ) {}\n}\n\nexport class LRU<T> implements Cache<T> {\n  private cache: { [key: string]: Node<T> } = {}\n  private head: Node<T>\n  private tail: Node<T>\n\n  constructor (\n    public limit: number,\n    public size = 0\n  ) {\n    this.head = new Node<T>('HEAD', null as any, null as any, null as any)\n    this.tail = new Node<T>('TAIL', null as any, null as any, null as any)\n    this.head.next = this.tail\n    this.tail.prev = this.head\n  }\n\n  write (key: string, value: T) {\n    if (this.cache[key]) {\n      this.cache[key].value = value\n    } else {\n      const node = new Node(key, value, this.head.next, this.head)\n      this.head.next.prev = node\n      this.head.next = node\n\n      this.cache[key] = node\n      this.size++\n      this.ensureLimit()\n    }\n  }\n\n  read (key: string): T | undefined {\n    if (!this.cache[key]) return\n    const { value } = this.cache[key]\n    this.remove(key)\n    this.write(key, value)\n    return value\n  }\n\n  remove (key: string) {\n    const node = this.cache[key]\n    node.prev.next = node.next\n    node.next.prev = node.prev\n    delete this.cache[key]\n    this.size--\n  }\n\n  clear () {\n    this.head.next = this.tail\n    this.tail.prev = this.head\n    this.size = 0\n    this.cache = {}\n  }\n\n  private ensureLimit () {\n    if (this.size > this.limit) this.remove(this.tail.prev.key)\n  }\n}\n","import { last } from '../util/underscore'\n\nfunction domResolve (root: string, path: string) {\n  const base = document.createElement('base')\n  base.href = root\n\n  const head = document.getElementsByTagName('head')[0]\n  head.insertBefore(base, head.firstChild)\n\n  const a = document.createElement('a')\n  a.href = path\n  const resolved = a.href\n  head.removeChild(base)\n\n  return resolved\n}\n\nexport function resolve (root: string, filepath: string, ext: string) {\n  if (root.length && last(root) !== '/') root += '/'\n  const url = domResolve(root, filepath)\n  return url.replace(/^(\\w+:\\/\\/[^/]+)(\\/[^?]+)/, (str, origin, path) => {\n    const last = path.split('/').pop()\n    if (/\\.\\w+$/.test(last)) return str\n    return origin + path + ext\n  })\n}\n\nexport async function readFile (url: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.responseText as string)\n      } else {\n        reject(new Error(xhr.statusText))\n      }\n    }\n    xhr.onerror = () => {\n      reject(new Error('An error occurred whilst receiving the response.'))\n    }\n    xhr.open('GET', url)\n    xhr.send()\n  })\n}\n\nexport function readFileSync (url: string): string {\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', url, false)\n  xhr.send()\n  if (xhr.status < 200 || xhr.status >= 300) {\n    throw new Error(xhr.statusText)\n  }\n  return xhr.responseText as string\n}\n\nexport async function exists (filepath: string) {\n  return true\n}\n\nexport function existsSync (filepath: string) {\n  return true\n}\n","import { isFunction } from '../util/underscore'\n\nexport interface Comparable {\n  equals: (rhs: any) => boolean;\n  gt: (rhs: any) => boolean;\n  geq: (rhs: any) => boolean;\n  lt: (rhs: any) => boolean;\n  leq: (rhs: any) => boolean;\n}\n\nexport function isComparable (arg: any): arg is Comparable {\n  return arg && isFunction(arg.equals)\n}\n","import { Context } from '../context/context'\n\nexport function isTruthy (val: any, ctx: Context): boolean {\n  return !isFalsy(val, ctx)\n}\n\nexport function isFalsy (val: any, ctx: Context): boolean {\n  if (ctx.opts.jsTruthy) {\n    return !val\n  } else {\n    return val === false || undefined === val || val === null\n  }\n}\n","import { isComparable } from '../drop/comparable'\nimport { Context } from '../context/context'\nimport { isFunction } from '../util/underscore'\nimport { isTruthy } from '../render/boolean'\n\nexport interface Operators {\n  [key: string]: (lhs: any, rhs: any, ctx: Context) => boolean;\n}\n\nexport const defaultOperators: Operators = {\n  '==': (l: any, r: any) => {\n    if (isComparable(l)) return l.equals(r)\n    if (isComparable(r)) return r.equals(l)\n    return l === r\n  },\n  '!=': (l: any, r: any) => {\n    if (isComparable(l)) return !l.equals(r)\n    if (isComparable(r)) return !r.equals(l)\n    return l !== r\n  },\n  '>': (l: any, r: any) => {\n    if (isComparable(l)) return l.gt(r)\n    if (isComparable(r)) return r.lt(l)\n    return l > r\n  },\n  '<': (l: any, r: any) => {\n    if (isComparable(l)) return l.lt(r)\n    if (isComparable(r)) return r.gt(l)\n    return l < r\n  },\n  '>=': (l: any, r: any) => {\n    if (isComparable(l)) return l.geq(r)\n    if (isComparable(r)) return r.leq(l)\n    return l >= r\n  },\n  '<=': (l: any, r: any) => {\n    if (isComparable(l)) return l.leq(r)\n    if (isComparable(r)) return r.geq(l)\n    return l <= r\n  },\n  'contains': (l: any, r: any) => {\n    return l && isFunction(l.indexOf) ? l.indexOf(r) > -1 : false\n  },\n  'and': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) && isTruthy(r, ctx),\n  'or': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) || isTruthy(r, ctx)\n}\n","// **DO NOT CHANGE THIS FILE**\n//\n// This file is generated by bin/character-gen.js\n// bitmask character types to boost performance\nexport const TYPES = [0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 4, 4, 4, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 8, 0, 0, 0, 0, 8, 0, 0, 0, 64, 0, 65, 0, 0, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 0, 0, 2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]\nexport const IDENTIFIER = 1\nexport const OPERATOR = 2\nexport const BLANK = 4\nexport const QUOTE = 8\nexport const INLINE_BLANK = 16\nexport const NUMBER = 32\nexport const SIGN = 64\nTYPES[160] = TYPES[5760] = TYPES[6158] = TYPES[8192] = TYPES[8193] = TYPES[8194] = TYPES[8195] = TYPES[8196] = TYPES[8197] = TYPES[8198] = TYPES[8199] = TYPES[8200] = TYPES[8201] = TYPES[8202] = TYPES[8232] = TYPES[8233] = TYPES[8239] = TYPES[8287] = TYPES[12288] = BLANK\n","import { Operators } from '../render/operator'\nimport { IDENTIFIER, TYPES } from '../util/character'\n\nexport interface Trie {\n  [key: string]: any;\n}\n\nexport function createTrie (operators: Operators): Trie {\n  const trie: Trie = {}\n  for (const [name, handler] of Object.entries(operators)) {\n    let node = trie\n\n    for (let i = 0; i < name.length; i++) {\n      const c = name[i]\n      node[c] = node[c] || {}\n\n      if (i === name.length - 1 && (TYPES[name.charCodeAt(i)] & IDENTIFIER)) {\n        node[c].needBoundary = true\n      }\n\n      node = node[c]\n    }\n\n    node.handler = handler\n    node.end = true\n  }\n  return trie\n}\n","import * as _ from './util/underscore'\nimport { Template } from './template/template'\nimport { Cache } from './cache/cache'\nimport { LRU } from './cache/lru'\nimport { FS } from './fs/fs'\nimport * as fs from './fs/node'\nimport { defaultOperators, Operators } from './render/operator'\nimport { createTrie, Trie } from './util/operator-trie'\n\nexport interface LiquidOptions {\n  /** A directory or an array of directories from where to resolve layout and include templates, and the filename passed to `.renderFile()`. If it's an array, the files are looked up in the order they occur in the array. Defaults to `[\".\"]` */\n  root?: string | string[];\n  /** A directory or an array of directories from where to resolve included templates. If it's an array, the files are looked up in the order they occur in the array. Defaults to `root` */\n  partials?: string | string[];\n  /** A directory or an array of directories from where to resolve layout templates. If it's an array, the files are looked up in the order they occur in the array. Defaults to `root` */\n  layouts?: string | string[];\n  /** Allow refer to layouts/partials by relative pathname. To avoid arbitrary filesystem read, paths been referenced also need to be within corresponding root, partials, layouts. Defaults to `true`. */\n  relativeReference?: boolean;\n  /** Add a extname (if filepath doesn't include one) before template file lookup. Eg: setting to `\".html\"` will allow including file by basename. Defaults to `\"\"`. */\n  extname?: string;\n  /** Whether or not to cache resolved templates. Defaults to `false`. */\n  cache?: boolean | number | Cache<Template[]>;\n  /** Use Javascript Truthiness. Defaults to `false`. */\n  jsTruthy?: boolean;\n  /** If set, treat the `filepath` parameter in `{%include filepath %}` and `{%layout filepath%}` as a variable, otherwise as a literal value. Defaults to `true`. */\n  dynamicPartials?: boolean;\n  /** Whether or not to assert filter existence. If set to `false`, undefined filters will be skipped. Otherwise, undefined filters will cause an exception. Defaults to `false`. */\n  strictFilters?: boolean;\n  /** Whether or not to assert variable existence.  If set to `false`, undefined variables will be rendered as empty string.  Otherwise, undefined variables will cause an exception. Defaults to `false`. */\n  strictVariables?: boolean;\n  /** Modifies the behavior of `strictVariables`. If set, a single undefined variable will *not* cause an exception in the context of the `if`/`elsif`/`unless` tag and the `default` filter. Instead, it will evaluate to `false` and `null`, respectively. Irrelevant if `strictVariables` is not set. Defaults to `false`. **/\n  lenientIf?: boolean;\n  /** JavaScript timezoneOffset for `date` filter, default to local time. That means if you're in Australia (UTC+10), it'll default to -600 */\n  timezoneOffset?: number;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of tags (`{% %}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimTagRight?: boolean;\n  /** Similar to `trimTagRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimTagLeft?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of values (`{{ }}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimOutputRight?: boolean;\n  /** Similar to `trimOutputRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimOutputLeft?: boolean;\n  /** The left delimiter for liquid tags. **/\n  tagDelimiterLeft?: string;\n  /** The right delimiter for liquid tags. **/\n  tagDelimiterRight?: string;\n  /** The left delimiter for liquid outputs. **/\n  outputDelimiterLeft?: string;\n  /** The right delimiter for liquid outputs. **/\n  outputDelimiterRight?: string;\n  /** Whether input strings to date filter preserve the given timezone **/\n  preserveTimezones?: boolean;\n  /** Whether `trim*Left`/`trim*Right` is greedy. When set to `true`, all consecutive blank characters including `\\n` will be trimed regardless of line breaks. Defaults to `true`. */\n  greedy?: boolean;\n  /** `fs` is used to override the default file-system module with a custom implementation. */\n  fs?: FS;\n  /** the global environment passed down to all partial templates, i.e. templates included by `include`, `layout` and `render` tags. */\n  globals?: object;\n  /** Whether or not to keep value type when writing the Output, not working for streamed rendering. Defaults to `false`. */\n  keepOutputType?: boolean;\n  /** An object of operators for conditional statements. Defaults to the regular Liquid operators. */\n  operators?: Operators;\n  /** Respect parameter order when using filters like \"for ... reversed limit\", Defaults to `false`. */\n  orderedFilterParameters?: boolean;\n}\n\ninterface NormalizedOptions extends LiquidOptions {\n  root?: string[];\n  partials?: string[];\n  layouts?: string[];\n  cache?: Cache<Template[]>;\n  operatorsTrie?: Trie;\n}\n\nexport interface NormalizedFullOptions extends NormalizedOptions {\n  root: string[];\n  partials: string[];\n  layouts: string[];\n  relativeReference: boolean;\n  extname: string;\n  cache: undefined | Cache<Template[]>;\n  jsTruthy: boolean;\n  dynamicPartials: boolean;\n  fs: FS;\n  strictFilters: boolean;\n  strictVariables: boolean;\n  lenientIf: boolean;\n  trimTagRight: boolean;\n  trimTagLeft: boolean;\n  trimOutputRight: boolean;\n  trimOutputLeft: boolean;\n  tagDelimiterLeft: string;\n  tagDelimiterRight: string;\n  outputDelimiterLeft: string;\n  outputDelimiterRight: string;\n  preserveTimezones: boolean;\n  greedy: boolean;\n  globals: object;\n  keepOutputType: boolean;\n  operators: Operators;\n  operatorsTrie: Trie;\n}\n\nexport const defaultOptions: NormalizedFullOptions = {\n  root: ['.'],\n  layouts: ['.'],\n  partials: ['.'],\n  relativeReference: true,\n  cache: undefined,\n  extname: '',\n  fs: fs,\n  dynamicPartials: true,\n  jsTruthy: false,\n  trimTagRight: false,\n  trimTagLeft: false,\n  trimOutputRight: false,\n  trimOutputLeft: false,\n  greedy: true,\n  tagDelimiterLeft: '{%',\n  tagDelimiterRight: '%}',\n  outputDelimiterLeft: '{{',\n  outputDelimiterRight: '}}',\n  preserveTimezones: false,\n  strictFilters: false,\n  strictVariables: false,\n  lenientIf: false,\n  globals: {},\n  keepOutputType: false,\n  operators: defaultOperators,\n  operatorsTrie: createTrie(defaultOperators)\n}\n\nexport function normalize (options?: LiquidOptions): NormalizedOptions {\n  options = options || {}\n  if (options.hasOwnProperty('root')) {\n    options.root = normalizeDirectoryList(options.root)\n  }\n  if (options.hasOwnProperty('partials')) {\n    options.partials = normalizeDirectoryList(options.partials)\n  }\n  if (options.hasOwnProperty('layouts')) {\n    options.layouts = normalizeDirectoryList(options.layouts)\n  }\n  if (options.hasOwnProperty('cache')) {\n    let cache: Cache<Template[]> | undefined\n    if (typeof options.cache === 'number') cache = options.cache > 0 ? new LRU(options.cache) : undefined\n    else if (typeof options.cache === 'object') cache = options.cache\n    else cache = options.cache ? new LRU<Template[]>(1024) : undefined\n    options.cache = cache\n  }\n  if (options.hasOwnProperty('operators')) {\n    (options as NormalizedOptions).operatorsTrie = createTrie(options.operators!)\n  }\n  return options as NormalizedOptions\n}\n\nexport function applyDefault (options: NormalizedOptions): NormalizedFullOptions {\n  const fullOptions = { ...defaultOptions, ...options }\n  if (fullOptions.partials === defaultOptions.partials) {\n    fullOptions.partials = fullOptions.root\n  }\n  if (fullOptions.layouts === defaultOptions.layouts) {\n    fullOptions.layouts = fullOptions.root\n  }\n  return fullOptions\n}\n\nexport function normalizeDirectoryList (value: any): string[] {\n  let list: string[] = []\n  if (_.isArray(value)) list = value\n  if (_.isString(value)) list = [value]\n  return list.map(str => fs.resolve(str, '.', '')).map(str => str[str.length - 1] !== '/' ? str + '/' : str)\n}\n","import * as _ from './underscore'\nimport { Token } from '../tokens/token'\nimport { Template } from '../template/template'\n\nexport abstract class LiquidError extends Error {\n  private token: Token\n  public context: string\n  private originalError: Error\n  public constructor (err: Error, token: Token) {\n    super(err.message)\n    this.originalError = err\n    this.token = token\n    this.context = ''\n  }\n  protected update () {\n    const err = this.originalError\n    this.context = mkContext(this.token)\n    this.message = mkMessage(err.message, this.token)\n    this.stack = this.message + '\\n' + this.context +\n      '\\n' + this.stack + '\\nFrom ' + err.stack\n  }\n}\n\nexport class TokenizationError extends LiquidError {\n  public constructor (message: string, token: Token) {\n    super(new Error(message), token)\n    this.name = 'TokenizationError'\n    super.update()\n  }\n}\n\nexport class ParseError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'ParseError'\n    this.message = err.message\n    super.update()\n  }\n}\n\nexport class RenderError extends LiquidError {\n  public constructor (err: Error, tpl: Template) {\n    super(err, tpl.token)\n    this.name = 'RenderError'\n    this.message = err.message\n    super.update()\n  }\n  public static is (obj: any): obj is RenderError {\n    return obj.name === 'RenderError'\n  }\n}\n\nexport class UndefinedVariableError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'UndefinedVariableError'\n    this.message = err.message\n    super.update()\n  }\n}\n\n// only used internally; raised where we don't have token information,\n// so it can't be an UndefinedVariableError.\nexport class InternalUndefinedVariableError extends Error {\n  variableName: string\n\n  public constructor (variableName: string) {\n    super(`undefined variable: ${variableName}`)\n    this.name = 'InternalUndefinedVariableError'\n    this.variableName = variableName\n  }\n}\n\nexport class AssertionError extends Error {\n  public constructor (message: string) {\n    super(message)\n    this.name = 'AssertionError'\n    this.message = message + ''\n  }\n}\n\nfunction mkContext (token: Token) {\n  const [line] = token.getPosition()\n  const lines = token.input.split('\\n')\n  const begin = Math.max(line - 2, 1)\n  const end = Math.min(line + 3, lines.length)\n\n  const context = _\n    .range(begin, end + 1)\n    .map(lineNumber => {\n      const indicator = (lineNumber === line) ? '>> ' : '   '\n      const num = _.padStart(String(lineNumber), String(end).length)\n      const text = lines[lineNumber - 1]\n      return `${indicator}${num}| ${text}`\n    })\n    .join('\\n')\n\n  return context\n}\n\nfunction mkMessage (msg: string, token: Token) {\n  if (token.file) msg += `, file:${token.file}`\n  const [line, col] = token.getPosition()\n  msg += `, line:${line}, col:${col}`\n  return msg\n}\n","import { FS } from './fs'\n\ninterface LoaderOptions {\n  fs: FS;\n  extname: string;\n  root: string[];\n  partials: string[];\n  layouts: string[];\n  relativeReference: boolean;\n}\nexport enum LookupType {\n  Partials = 'partials',\n  Layouts = 'layouts',\n  Root = 'root'\n}\nexport class Loader {\n  private options: LoaderOptions\n\n  constructor (options: LoaderOptions) {\n    this.options = options\n  }\n\n  public * lookup (file: string, type: LookupType, sync?: boolean, currentFile?: string) {\n    const { fs } = this.options\n    const dirs = this.options[type]\n    for (const filepath of this.candidates(file, dirs, currentFile, type !== LookupType.Root)) {\n      if (sync ? fs.existsSync(filepath) : yield fs.exists(filepath)) return filepath\n    }\n    throw this.lookupError(file, dirs)\n  }\n\n  public shouldLoadRelative (currentFile: string) {\n    return this.options.relativeReference && this.isRelativePath(currentFile)\n  }\n\n  public isRelativePath (path: string) {\n    return path.startsWith('./') || path.startsWith('../')\n  }\n\n  public * candidates (file: string, dirs: string[], currentFile?: string, enforceRoot?: boolean) {\n    const { fs, extname } = this.options\n    if (this.shouldLoadRelative(file) && currentFile) {\n      const referenced = fs.resolve(this.dirname(currentFile), file, extname)\n      for (const dir of dirs) {\n        if (!enforceRoot || referenced.startsWith(dir)) {\n          // the relatively referenced file is within one of root dirs\n          yield referenced\n          return\n        }\n      }\n    }\n    for (const dir of dirs) {\n      const referenced = fs.resolve(dir, file, extname)\n      if (!enforceRoot || referenced.startsWith(dir)) {\n        yield referenced\n      }\n    }\n    if (fs.fallback !== undefined) {\n      const filepath = fs.fallback(file)\n      if (filepath !== undefined) yield filepath\n    }\n  }\n\n  private dirname (path: string) {\n    const segments = path.split('/')\n    segments.pop()\n    return segments.join('/')\n  }\n\n  private lookupError (file: string, roots: string[]) {\n    const err = new Error('ENOENT') as any\n    err.message = `ENOENT: Failed to lookup \"${file}\" in \"${roots}\"`\n    err.code = 'ENOENT'\n    return err\n  }\n}\n","import { Drop } from '../drop/drop'\nimport { __assign } from 'tslib'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { Scope } from './scope'\nimport { isArray, isNil, isString, isFunction, toLiquid } from '../util/underscore'\nimport { InternalUndefinedVariableError } from '../util/error'\n\nexport class Context {\n  private scopes: Scope[] = [{}]\n  private registers = {}\n  public environments: Scope\n  public globals: Scope\n  public sync: boolean\n  public opts: NormalizedFullOptions\n  public constructor (env: object = {}, opts: NormalizedFullOptions = defaultOptions, sync = false) {\n    this.sync = sync\n    this.opts = opts\n    this.globals = opts.globals\n    this.environments = env\n  }\n  public getRegister (key: string) {\n    return (this.registers[key] = this.registers[key] || {})\n  }\n  public setRegister (key: string, value: any) {\n    return (this.registers[key] = value)\n  }\n  public saveRegister (...keys: string[]): [string, any][] {\n    return keys.map(key => [key, this.getRegister(key)])\n  }\n  public restoreRegister (keyValues: [string, any][]) {\n    return keyValues.forEach(([key, value]) => this.setRegister(key, value))\n  }\n  public getAll () {\n    return [this.globals, this.environments, ...this.scopes]\n      .reduce((ctx, val) => __assign(ctx, val), {})\n  }\n  public get (paths: string[]) {\n    const scope = this.findScope(paths[0])\n    return this.getFromScope(scope, paths)\n  }\n  public getFromScope (scope: object, paths: string[] | string) {\n    if (typeof paths === 'string') paths = paths.split('.')\n    return paths.reduce((scope, path) => {\n      scope = readProperty(scope, path)\n      if (isNil(scope) && this.opts.strictVariables) {\n        throw new InternalUndefinedVariableError(path)\n      }\n      return scope\n    }, scope)\n  }\n  public push (ctx: object) {\n    return this.scopes.push(ctx)\n  }\n  public pop () {\n    return this.scopes.pop()\n  }\n  public bottom () {\n    return this.scopes[0]\n  }\n  private findScope (key: string) {\n    for (let i = this.scopes.length - 1; i >= 0; i--) {\n      const candidate = this.scopes[i]\n      if (key in candidate) return candidate\n    }\n    if (key in this.environments) return this.environments\n    return this.globals\n  }\n}\n\nexport function readProperty (obj: Scope, key: string) {\n  if (isNil(obj)) return obj\n  obj = toLiquid(obj)\n  if (isFunction(obj[key])) return obj[key]()\n  if (obj instanceof Drop) {\n    if (obj.hasOwnProperty(key)) return obj[key]\n    return obj.liquidMethodMissing(key)\n  }\n  if (key === 'size') return readSize(obj)\n  if (key === 'first') return readFirst(obj)\n  if (key === 'last') return readLast(obj)\n  return obj[key]\n}\n\nfunction readFirst (obj: Scope) {\n  if (isArray(obj)) return obj[0]\n  return obj['first']\n}\n\nfunction readLast (obj: Scope) {\n  if (isArray(obj)) return obj[obj.length - 1]\n  return obj['last']\n}\n\nfunction readSize (obj: Scope) {\n  if (isArray(obj) || isString(obj)) return obj.length\n  return obj['size']\n}\n","import { stringify } from '../util/underscore'\nimport { Emitter } from './emitter'\n\nexport class SimpleEmitter implements Emitter {\n  public buffer = '';\n\n  public write (html: any) {\n    this.buffer += stringify(html)\n  }\n}\n","import { Emitter } from './emitter'\n\nexport class StreamedEmitter implements Emitter {\n  public buffer = '';\n  public stream: NodeJS.ReadableStream = null as any\n  constructor () {\n    throw new Error('streaming not supported in browser')\n  }\n  public write: (html: any) => void\n  public error: (err: Error) => void\n  public end: () => void\n}\n","import { isFunction } from './underscore'\n\ntype resolver = (x?: any) => any\n\ninterface Thenable {\n  then (resolve: resolver, reject?: resolver): Thenable;\n  catch (reject: resolver): Thenable;\n}\n\nfunction createResolvedThenable (value: any): Thenable {\n  const ret = {\n    then: (resolve: resolver) => resolve(value),\n    catch: () => ret\n  }\n  return ret\n}\n\nfunction createRejectedThenable (err: Error): Thenable {\n  const ret = {\n    then: (resolve: resolver, reject?: resolver) => {\n      if (reject) return reject(err)\n      return ret\n    },\n    catch: (reject: resolver) => reject(err)\n  }\n  return ret\n}\n\nfunction isThenable (val: any): val is Thenable {\n  return val && isFunction(val.then)\n}\n\nfunction isAsyncIterator (val: any): val is IterableIterator<any> {\n  return val && isFunction(val.next) && isFunction(val.throw) && isFunction(val.return)\n}\n\n// convert an async iterator to a thenable (Promise compatible)\nexport function toThenable (val: IterableIterator<any> | Thenable | any): Thenable {\n  if (isThenable(val)) return val\n  if (isAsyncIterator(val)) return reduce()\n  return createResolvedThenable(val)\n\n  function reduce (prev?: any): Thenable {\n    let state\n    try {\n      state = (val as IterableIterator<any>).next(prev)\n    } catch (err) {\n      return createRejectedThenable(err)\n    }\n\n    if (state.done) return createResolvedThenable(state.value)\n    return toThenable(state.value!).then(reduce, err => {\n      let state\n      try {\n        state = (val as IterableIterator<any>).throw!(err)\n      } catch (e) {\n        return createRejectedThenable(e)\n      }\n      if (state.done) return createResolvedThenable(state.value)\n      return reduce(state.value)\n    })\n  }\n}\n\nexport function toPromise (val: IterableIterator<any> | Thenable | any): Promise<any> {\n  return Promise.resolve(toThenable(val))\n}\n\n// get the value of async iterator in synchronous manner\nexport function toValue (val: IterableIterator<any> | Thenable | any) {\n  let ret: any\n  toThenable(val)\n    .then((x: any) => {\n      ret = x\n      return createResolvedThenable(ret)\n    })\n    .catch((err: Error) => {\n      throw err\n    })\n  return ret\n}\n","import { stringify, toValue } from '../util/underscore'\nimport { Emitter } from '../types'\n\nexport class KeepingTypeEmitter implements Emitter {\n  public buffer: any = '';\n\n  public write (html: any) {\n    html = toValue(html)\n    // This will only preserve the type if the value is isolated.\n    // I.E:\n    // {{ my-port }} -> 42\n    // {{ my-host }}:{{ my-port }} -> 'host:42'\n    if (typeof html !== 'string' && this.buffer === '') {\n      this.buffer = html\n    } else {\n      this.buffer = stringify(this.buffer) + stringify(html)\n    }\n  }\n}\n","import { RenderError } from '../util/error'\nimport { Context } from '../context/context'\nimport { Template } from '../template/template'\nimport { Emitter } from '../emitters/emitter'\nimport { SimpleEmitter } from '../emitters/simple-emitter'\nimport { StreamedEmitter } from '../emitters/streamed-emitter'\nimport { toThenable } from '../util/async'\nimport { KeepingTypeEmitter } from '../emitters/keeping-type-emitter'\n\nexport class Render {\n  public renderTemplatesToNodeStream (templates: Template[], ctx: Context): NodeJS.ReadableStream {\n    const emitter = new StreamedEmitter()\n    Promise.resolve().then(() => toThenable(this.renderTemplates(templates, ctx, emitter)))\n      .then(() => emitter.end(), err => emitter.error(err))\n    return emitter.stream\n  }\n  public * renderTemplates (templates: Template[], ctx: Context, emitter?: Emitter): IterableIterator<any> {\n    if (!emitter) {\n      emitter = ctx.opts.keepOutputType ? new KeepingTypeEmitter() : new SimpleEmitter()\n    }\n    for (const tpl of templates) {\n      try {\n        // if tpl.render supports emitter, it'll return empty `html`\n        const html = yield tpl.render(ctx, emitter)\n        // if not, it'll return an `html`, write to the emitter for it\n        html && emitter.write(html)\n        if (emitter['break'] || emitter['continue']) break\n      } catch (e) {\n        const err = RenderError.is(e) ? e : new RenderError(e, tpl)\n        throw err\n      }\n    }\n    return emitter.buffer\n  }\n}\n","export enum TokenKind {\n  Number = 1,\n  Literal = 2,\n  Tag = 4,\n  Output = 8,\n  HTML = 16,\n  Filter = 32,\n  Hash = 64,\n  PropertyAccess = 128,\n  Word = 256,\n  Range = 512,\n  Quoted = 1024,\n  Operator = 2048,\n  Delimited = Tag | Output\n}\n","import { OperatorToken } from '../tokens/operator-token'\nimport { DelimitedToken } from '../tokens/delimited-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { HTMLToken } from '../tokens/html-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport function isDelimitedToken (val: any): val is DelimitedToken {\n  return !!(getKind(val) & TokenKind.Delimited)\n}\n\nexport function isOperatorToken (val: any): val is OperatorToken {\n  return getKind(val) === TokenKind.Operator\n}\n\nexport function isHTMLToken (val: any): val is HTMLToken {\n  return getKind(val) === TokenKind.HTML\n}\n\nexport function isOutputToken (val: any): val is OutputToken {\n  return getKind(val) === TokenKind.Output\n}\n\nexport function isTagToken (val: any): val is TagToken {\n  return getKind(val) === TokenKind.Tag\n}\n\nexport function isQuotedToken (val: any): val is QuotedToken {\n  return getKind(val) === TokenKind.Quoted\n}\n\nexport function isLiteralToken (val: any): val is LiteralToken {\n  return getKind(val) === TokenKind.Literal\n}\n\nexport function isNumberToken (val: any): val is NumberToken {\n  return getKind(val) === TokenKind.Number\n}\n\nexport function isPropertyAccessToken (val: any): val is PropertyAccessToken {\n  return getKind(val) === TokenKind.PropertyAccess\n}\n\nexport function isWordToken (val: any): val is IdentifierToken {\n  return getKind(val) === TokenKind.Word\n}\n\nexport function isRangeToken (val: any): val is RangeToken {\n  return getKind(val) === TokenKind.Range\n}\n\nfunction getKind (val: any) {\n  return val ? val.kind : -1\n}\n","import { Token } from '../tokens/token'\nimport { Template } from '../template/template'\nimport { isTagToken } from '../util/type-guards'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\ntype ParseToken<T extends Token> = ((token: T, remainTokens: T[]) => Template)\n\nexport class ParseStream<T extends Token = TopLevelToken> {\n  private tokens: T[]\n  private handlers: {[key: string]: (arg: any) => void} = {}\n  private stopRequested = false\n  private parseToken: ParseToken<T>\n\n  public constructor (tokens: T[], parseToken: ParseToken<T>) {\n    this.tokens = tokens\n    this.parseToken = parseToken\n  }\n  public on<T2 extends Template | T | undefined> (name: string, cb: (this: ParseStream, arg: T2) => void): ParseStream<T> {\n    this.handlers[name] = cb\n    return this\n  }\n  private trigger <T extends Token | Template> (event: string, arg?: T) {\n    const h = this.handlers[event]\n    return h ? (h.call(this, arg), true) : false\n  }\n  public start () {\n    this.trigger('start')\n    let token: T | undefined\n    while (!this.stopRequested && (token = this.tokens.shift())) {\n      if (this.trigger('token', token)) continue\n      if (isTagToken(token) && this.trigger(`tag:${token.name}`, token)) {\n        continue\n      }\n      const template = this.parseToken(token, this.tokens)\n      this.trigger('template', template)\n    }\n    if (!this.stopRequested) this.trigger('end')\n    return this\n  }\n  public stop () {\n    this.stopRequested = true\n    return this\n  }\n}\n","export abstract class TemplateImpl<T> {\n  public token: T;\n  public constructor (token: T) {\n    this.token = token\n  }\n}\n","import { AssertionError } from './error'\n\nexport function assert <T> (predicate: T | null | undefined, message?: () => string) {\n  if (!predicate) {\n    const msg = message ? message() : `expect ${predicate} to be true`\n    throw new AssertionError(msg)\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isNil, toValue } from '../util/underscore'\n\nexport class NullDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    return isNil(toValue(value))\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return null\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isObject, isString, isArray, toValue } from '../util/underscore'\n\nexport class EmptyDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    if (value instanceof EmptyDrop) return false\n    value = toValue(value)\n    if (isString(value) || isArray(value)) return value.length === 0\n    if (isObject(value)) return Object.keys(value).length === 0\n    return false\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return ''\n  }\n}\n","import { isNil, isString, toValue } from '../util/underscore'\nimport { EmptyDrop } from '../drop/empty-drop'\n\nexport class BlankDrop extends EmptyDrop {\n  public equals (value: any) {\n    if (value === false) return true\n    if (isNil(toValue(value))) return true\n    if (isString(value)) return /^\\s*$/.test(value)\n    return super.equals(value)\n  }\n}\n","import { NullDrop } from '../drop/null-drop'\nimport { EmptyDrop } from '../drop/empty-drop'\nimport { BlankDrop } from '../drop/blank-drop'\n\nconst nil = new NullDrop()\nexport const literalValues = {\n  'true': true,\n  'false': false,\n  'nil': nil,\n  'null': nil,\n  'empty': new EmptyDrop(),\n  'blank': new BlankDrop()\n}\n","const rHex = /[\\da-fA-F]/\nconst rOct = /[0-7]/\nconst escapeChar = {\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t',\n  v: '\\x0B'\n}\n\nfunction hexVal (c: string) {\n  const code = c.charCodeAt(0)\n  if (code >= 97) return code - 87\n  if (code >= 65) return code - 55\n  return code - 48\n}\n\nexport function parseStringLiteral (str: string): string {\n  let ret = ''\n  for (let i = 1; i < str.length - 1; i++) {\n    if (str[i] !== '\\\\') {\n      ret += str[i]\n      continue\n    }\n    if (escapeChar[str[i + 1]] !== undefined) {\n      ret += escapeChar[str[++i]]\n    } else if (str[i + 1] === 'u') {\n      let val = 0\n      let j = i + 2\n      while (j <= i + 5 && rHex.test(str[j])) {\n        val = val * 16 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    } else if (!rOct.test(str[i + 1])) {\n      ret += str[++i]\n    } else {\n      let j = i + 1\n      let val = 0\n      while (j <= i + 3 && rOct.test(str[j])) {\n        val = val * 8 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    }\n  }\n  return ret\n}\n","import { QuotedToken } from '../tokens/quoted-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { assert } from '../util/assert'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport * as TypeGuards from '../util/type-guards'\nimport { Token } from '../tokens/token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\nimport { Context } from '../context/context'\nimport { range } from '../util/underscore'\nimport { Operators } from '../render/operator'\nimport { UndefinedVariableError } from '../util/error'\n\nexport class Expression {\n  private postfix: Token[]\n\n  public constructor (tokens: IterableIterator<Token>) {\n    this.postfix = [...toPostfix(tokens)]\n  }\n  public * evaluate (ctx: Context, lenient: boolean): any {\n    assert(ctx, () => 'unable to evaluate: context not defined')\n    const operands: any[] = []\n    for (const token of this.postfix) {\n      if (TypeGuards.isOperatorToken(token)) {\n        const r = yield operands.pop()\n        const l = yield operands.pop()\n        const result = evalOperatorToken(ctx.opts.operators, token, l, r, ctx)\n        operands.push(result)\n      } else {\n        operands.push(yield evalToken(token, ctx, lenient && this.postfix.length === 1))\n      }\n    }\n    return operands[0]\n  }\n}\n\nexport function evalToken (token: Token | undefined, ctx: Context, lenient = false): any {\n  if (TypeGuards.isPropertyAccessToken(token)) return evalPropertyAccessToken(token, ctx, lenient)\n  if (TypeGuards.isRangeToken(token)) return evalRangeToken(token, ctx)\n  if (TypeGuards.isLiteralToken(token)) return evalLiteralToken(token)\n  if (TypeGuards.isNumberToken(token)) return evalNumberToken(token)\n  if (TypeGuards.isWordToken(token)) return token.getText()\n  if (TypeGuards.isQuotedToken(token)) return evalQuotedToken(token)\n}\n\nfunction evalPropertyAccessToken (token: PropertyAccessToken, ctx: Context, lenient: boolean) {\n  const props: string[] = token.props.map(prop => evalToken(prop, ctx, false))\n  try {\n    return ctx.get([token.propertyName, ...props])\n  } catch (e) {\n    if (lenient && e.name === 'InternalUndefinedVariableError') return null\n    throw (new UndefinedVariableError(e, token))\n  }\n}\n\nfunction evalNumberToken (token: NumberToken) {\n  const str = token.whole.content + '.' + (token.decimal ? token.decimal.content : '')\n  return Number(str)\n}\n\nexport function evalQuotedToken (token: QuotedToken) {\n  return parseStringLiteral(token.getText())\n}\n\nfunction evalOperatorToken (operators: Operators, token: OperatorToken, lhs: any, rhs: any, ctx: Context) {\n  const impl = operators[token.operator]\n  return impl(lhs, rhs, ctx)\n}\n\nfunction evalLiteralToken (token: LiteralToken) {\n  return literalValues[token.literal]\n}\n\nfunction evalRangeToken (token: RangeToken, ctx: Context) {\n  const low: number = evalToken(token.lhs, ctx)\n  const high: number = evalToken(token.rhs, ctx)\n  return range(+low, +high + 1)\n}\n\nfunction * toPostfix (tokens: IterableIterator<Token>): IterableIterator<Token> {\n  const ops: OperatorToken[] = []\n  for (const token of tokens) {\n    if (TypeGuards.isOperatorToken(token)) {\n      while (ops.length && ops[ops.length - 1].getPrecedence() > token.getPrecedence()) {\n        yield ops.pop()!\n      }\n      ops.push(token)\n    } else yield token\n  }\n  while (ops.length) {\n    yield ops.pop()!\n  }\n}\n","import { TokenKind } from '../parser/token-kind'\n\nexport abstract class Token {\n  public constructor (\n    public kind: TokenKind,\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {}\n  public getText () {\n    return this.input.slice(this.begin, this.end)\n  }\n  public getPosition () {\n    let [row, col] = [1, 1]\n    for (let i = 0; i < this.begin; i++) {\n      if (this.input[i] === '\\n') {\n        row++\n        col = 1\n      } else col++\n    }\n    return [row, col]\n  }\n  public size () {\n    return this.end - this.begin\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\nimport { last } from '../util/underscore'\n\nexport abstract class DelimitedToken extends Token {\n  public trimLeft = false\n  public trimRight = false\n  public content: string\n  public constructor (\n    kind: TokenKind,\n    content: string,\n    input: string,\n    begin: number,\n    end: number,\n    trimLeft: boolean,\n    trimRight: boolean,\n    file?: string\n  ) {\n    super(kind, input, begin, end, file)\n    this.content = this.getText()\n    const tl = content[0] === '-'\n    const tr = last(content) === '-'\n    this.content = content\n      .slice(\n        tl ? 1 : 0,\n        tr ? -1 : content.length\n      )\n      .trim()\n    this.trimLeft = tl || trimLeft\n    this.trimRight = tr || trimRight\n  }\n}\n","import { Token } from '../tokens/token'\nimport { isTagToken, isHTMLToken, isDelimitedToken } from '../util/type-guards'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TYPES, INLINE_BLANK, BLANK } from '../util/character'\n\nexport function whiteSpaceCtrl (tokens: Token[], options: NormalizedFullOptions) {\n  let inRaw = false\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n    if (!isDelimitedToken(token)) continue\n    if (!inRaw && token.trimLeft) {\n      trimLeft(tokens[i - 1], options.greedy)\n    }\n\n    if (isTagToken(token)) {\n      if (token.name === 'raw') inRaw = true\n      else if (token.name === 'endraw') inRaw = false\n    }\n\n    if (!inRaw && token.trimRight) {\n      trimRight(tokens[i + 1], options.greedy)\n    }\n  }\n}\n\nfunction trimLeft (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.end - 1 - token.trimRight)] & mask) token.trimRight++\n}\n\nfunction trimRight (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.begin + token.trimLeft)] & mask) token.trimLeft++\n  if (token.input.charAt(token.begin + token.trimLeft) === '\\n') token.trimLeft++\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class NumberToken extends Token {\n  constructor (\n    public whole: IdentifierToken,\n    public decimal?: IdentifierToken\n  ) {\n    super(TokenKind.Number, whole.input, whole.begin, decimal ? decimal.end : whole.end, whole.file)\n  }\n}\n","import { Token } from './token'\nimport { NUMBER, TYPES, SIGN } from '../util/character'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class IdentifierToken extends Token {\n  public content: string\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Word, input, begin, end, file)\n    this.content = this.getText()\n  }\n  isNumber (allowSign = false) {\n    const begin = allowSign && TYPES[this.input.charCodeAt(this.begin)] & SIGN\n      ? this.begin + 1\n      : this.begin\n    for (let i = begin; i < this.end; i++) {\n      if (!(TYPES[this.input.charCodeAt(i)] & NUMBER)) return false\n    }\n    return true\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class LiteralToken extends Token {\n  public literal: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Literal, input, begin, end, file)\n    this.literal = this.getText()\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport const precedence = {\n  '==': 1,\n  '!=': 1,\n  '>': 1,\n  '<': 1,\n  '>=': 1,\n  '<=': 1,\n  'contains': 1,\n  'and': 0,\n  'or': 0\n}\n\nexport class OperatorToken extends Token {\n  public operator: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Operator, input, begin, end, file)\n    this.operator = this.getText()\n  }\n  getPrecedence () {\n    const key = this.getText()\n    return key in precedence ? precedence[key] : 1\n  }\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { QuotedToken } from './quoted-token'\nimport { TokenKind } from '../parser/token-kind'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\n\nexport class PropertyAccessToken extends Token {\n  public propertyName: string\n  constructor (\n    public variable: IdentifierToken | QuotedToken,\n    public props: (IdentifierToken | QuotedToken | PropertyAccessToken)[],\n    end: number\n  ) {\n    super(TokenKind.PropertyAccess, variable.input, variable.begin, end, variable.file)\n    this.propertyName = this.variable instanceof IdentifierToken\n      ? this.variable.getText()\n      : parseStringLiteral(this.variable.getText())\n  }\n}\n","import { Token } from './token'\nimport { FilterArg } from '../parser/filter-arg'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class FilterToken extends Token {\n  public constructor (\n    public name: string,\n    public args: FilterArg[],\n    input: string,\n    begin: number,\n    end: number,\n    file?: string\n  ) {\n    super(TokenKind.Filter, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HashToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public name: IdentifierToken,\n    public value?: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Hash, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class QuotedToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Quoted, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HTMLToken extends Token {\n  trimLeft = 0\n  trimRight = 0\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.HTML, input, begin, end, file)\n  }\n  public getContent () {\n    return this.input.slice(this.begin + this.trimLeft, this.end - this.trimRight)\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class RangeToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public lhs: ValueToken,\n    public rhs: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Range, input, begin, end, file)\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class OutputToken extends DelimitedToken {\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimOutputLeft, trimOutputRight, outputDelimiterLeft, outputDelimiterRight } = options\n    const value = input.slice(begin + outputDelimiterLeft.length, end - outputDelimiterRight.length)\n    super(TokenKind.Output, value, input, begin, end, trimOutputLeft, trimOutputRight, file)\n  }\n}\n","import { whiteSpaceCtrl } from './whitespace-ctrl'\nimport { NumberToken } from '../tokens/number-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { assert } from '../util/assert'\nimport { TopLevelToken } from '../tokens/toplevel-token'\nimport { FilterArg } from './filter-arg'\nimport { FilterToken } from '../tokens/filter-token'\nimport { HashToken } from '../tokens/hash-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { ellipsis } from '../util/underscore'\nimport { HTMLToken } from '../tokens/html-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { Token } from '../tokens/token'\nimport { RangeToken } from '../tokens/range-token'\nimport { ValueToken } from '../tokens/value-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { TYPES, QUOTE, BLANK, IDENTIFIER } from '../util/character'\nimport { matchOperator } from './match-operator'\nimport { Trie } from '../util/operator-trie'\nimport { Expression } from '../render/expression'\n\nexport class Tokenizer {\n  p = 0\n  N: number\n  private rawBeginAt = -1\n\n  constructor (\n    public input: string,\n    private trie: Trie,\n    private file: string = ''\n  ) {\n    this.N = input.length\n  }\n\n  readExpression () {\n    return new Expression(this.readExpressionTokens())\n  }\n\n  * readExpressionTokens (): IterableIterator<Token> {\n    const operand = this.readValue()\n    if (!operand) return\n\n    yield operand\n\n    while (this.p < this.N) {\n      const operator = this.readOperator()\n      if (!operator) return\n\n      const operand = this.readValue()\n      if (!operand) return\n\n      yield operator\n      yield operand\n    }\n  }\n  readOperator (): OperatorToken | undefined {\n    this.skipBlank()\n    const end = matchOperator(this.input, this.p, this.trie, this.p + 8)\n    if (end === -1) return\n    return new OperatorToken(this.input, this.p, (this.p = end), this.file)\n  }\n  readFilters (): FilterToken[] {\n    const filters = []\n    while (true) {\n      const filter = this.readFilter()\n      if (!filter) return filters\n      filters.push(filter)\n    }\n  }\n  readFilter (): FilterToken | null {\n    this.skipBlank()\n    if (this.end()) return null\n    assert(this.peek() === '|', () => `unexpected token at ${this.snapshot()}`)\n    this.p++\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return null\n    const args = []\n    this.skipBlank()\n    if (this.peek() === ':') {\n      do {\n        ++this.p\n        const arg = this.readFilterArg()\n        arg && args.push(arg)\n        while (this.p < this.N && this.peek() !== ',' && this.peek() !== '|') ++this.p\n      } while (this.peek() === ',')\n    }\n    return new FilterToken(name.getText(), args, this.input, begin, this.p, this.file)\n  }\n\n  readFilterArg (): FilterArg | undefined {\n    const key = this.readValue()\n    if (!key) return\n    this.skipBlank()\n    if (this.peek() !== ':') return key\n    ++this.p\n    const value = this.readValue()\n    return [key.getText(), value]\n  }\n\n  readTopLevelTokens (options: NormalizedFullOptions = defaultOptions): TopLevelToken[] {\n    const tokens: TopLevelToken[] = []\n    while (this.p < this.N) {\n      const token = this.readTopLevelToken(options)\n      tokens.push(token)\n    }\n    whiteSpaceCtrl(tokens, options)\n    return tokens\n  }\n\n  readTopLevelToken (options: NormalizedFullOptions): TopLevelToken {\n    const { tagDelimiterLeft, outputDelimiterLeft } = options\n    if (this.rawBeginAt > -1) return this.readEndrawOrRawContent(options)\n    if (this.match(tagDelimiterLeft)) return this.readTagToken(options)\n    if (this.match(outputDelimiterLeft)) return this.readOutputToken(options)\n    return this.readHTMLToken(options)\n  }\n\n  readHTMLToken (options: NormalizedFullOptions): HTMLToken {\n    const begin = this.p\n    while (this.p < this.N) {\n      const { tagDelimiterLeft, outputDelimiterLeft } = options\n      if (this.match(tagDelimiterLeft)) break\n      if (this.match(outputDelimiterLeft)) break\n      ++this.p\n    }\n    return new HTMLToken(this.input, begin, this.p, this.file)\n  }\n\n  readTagToken (options: NormalizedFullOptions = defaultOptions): TagToken {\n    const { file, input } = this\n    const begin = this.p\n    if (this.readToDelimiter(options.tagDelimiterRight) === -1) {\n      throw this.mkError(`tag ${this.snapshot(begin)} not closed`, begin)\n    }\n    const token = new TagToken(input, begin, this.p, options, file)\n    if (token.name === 'raw') this.rawBeginAt = begin\n    return token\n  }\n\n  readToDelimiter (delimiter: string) {\n    while (this.p < this.N) {\n      if ((this.peekType() & QUOTE)) {\n        this.readQuoted()\n        continue\n      }\n      ++this.p\n      if (this.rmatch(delimiter)) return this.p\n    }\n    return -1\n  }\n\n  readOutputToken (options: NormalizedFullOptions = defaultOptions): OutputToken {\n    const { file, input } = this\n    const { outputDelimiterRight } = options\n    const begin = this.p\n    if (this.readToDelimiter(outputDelimiterRight) === -1) {\n      throw this.mkError(`output ${this.snapshot(begin)} not closed`, begin)\n    }\n    return new OutputToken(input, begin, this.p, options, file)\n  }\n\n  readEndrawOrRawContent (options: NormalizedFullOptions): HTMLToken | TagToken {\n    const { tagDelimiterLeft, tagDelimiterRight } = options\n    const begin = this.p\n    let leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n    while (this.p < this.N) {\n      if (this.readIdentifier().getText() !== 'endraw') {\n        leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n        continue\n      }\n      while (this.p <= this.N) {\n        if (this.rmatch(tagDelimiterRight)) {\n          const end = this.p\n          if (begin === leftPos) {\n            this.rawBeginAt = -1\n            return new TagToken(this.input, begin, end, options, this.file)\n          } else {\n            this.p = leftPos\n            return new HTMLToken(this.input, begin, leftPos, this.file)\n          }\n        }\n        if (this.rmatch(tagDelimiterLeft)) break\n        this.p++\n      }\n    }\n    throw this.mkError(`raw ${this.snapshot(this.rawBeginAt)} not closed`, begin)\n  }\n\n  mkError (msg: string, begin: number) {\n    return new TokenizationError(msg, new IdentifierToken(this.input, begin, this.N, this.file))\n  }\n\n  snapshot (begin: number = this.p) {\n    return JSON.stringify(ellipsis(this.input.slice(begin), 16))\n  }\n\n  /**\n   * @deprecated\n   */\n  readWord () {\n    console.warn('Tokenizer#readWord() will be removed, use #readIdentifier instead')\n    return this.readIdentifier()\n  }\n\n  readIdentifier (): IdentifierToken {\n    this.skipBlank()\n    const begin = this.p\n    while (this.peekType() & IDENTIFIER) ++this.p\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  readHashes () {\n    const hashes = []\n    while (true) {\n      const hash = this.readHash()\n      if (!hash) return hashes\n      hashes.push(hash)\n    }\n  }\n\n  readHash (): HashToken | undefined {\n    this.skipBlank()\n    if (this.peek() === ',') ++this.p\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return\n    let value\n\n    this.skipBlank()\n    if (this.peek() === ':') {\n      ++this.p\n      value = this.readValue()\n    }\n    return new HashToken(this.input, begin, this.p, name, value, this.file)\n  }\n\n  remaining () {\n    return this.input.slice(this.p)\n  }\n\n  advance (i = 1) {\n    this.p += i\n  }\n\n  end () {\n    return this.p >= this.N\n  }\n\n  readTo (end: string): number {\n    while (this.p < this.N) {\n      ++this.p\n      if (this.rmatch(end)) return this.p\n    }\n    return -1\n  }\n\n  readValue (): ValueToken | undefined {\n    const value = this.readQuoted() || this.readRange()\n    if (value) return value\n\n    if (this.peek() === '[') {\n      this.p++\n      const prop = this.readQuoted()\n      if (!prop) return\n      if (this.peek() !== ']') return\n      this.p++\n      return new PropertyAccessToken(prop, [], this.p)\n    }\n\n    const variable = this.readIdentifier()\n    if (!variable.size()) return\n\n    let isNumber = variable.isNumber(true)\n    const props: (QuotedToken | IdentifierToken)[] = []\n    while (true) {\n      if (this.peek() === '[') {\n        isNumber = false\n        this.p++\n        const prop = this.readValue() || new IdentifierToken(this.input, this.p, this.p, this.file)\n        this.readTo(']')\n        props.push(prop)\n      } else if (this.peek() === '.' && this.peek(1) !== '.') { // skip range syntax\n        this.p++\n        const prop = this.readIdentifier()\n        if (!prop.size()) break\n        if (!prop.isNumber()) isNumber = false\n        props.push(prop)\n      } else break\n    }\n    if (!props.length && literalValues.hasOwnProperty(variable.content)) {\n      return new LiteralToken(this.input, variable.begin, variable.end, this.file)\n    }\n    if (isNumber) return new NumberToken(variable, props[0] as IdentifierToken)\n    return new PropertyAccessToken(variable, props, this.p)\n  }\n\n  readRange (): RangeToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (this.peek() !== '(') return\n    ++this.p\n    const lhs = this.readValueOrThrow()\n    this.p += 2\n    const rhs = this.readValueOrThrow()\n    ++this.p\n    return new RangeToken(this.input, begin, this.p, lhs, rhs, this.file)\n  }\n\n  readValueOrThrow (): ValueToken {\n    const value = this.readValue()\n    assert(value, () => `unexpected token ${this.snapshot()}, value expected`)\n    return value!\n  }\n\n  readQuoted (): QuotedToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (!(this.peekType() & QUOTE)) return\n    ++this.p\n    let escaped = false\n    while (this.p < this.N) {\n      ++this.p\n      if (this.input[this.p - 1] === this.input[begin] && !escaped) break\n      if (escaped) escaped = false\n      else if (this.input[this.p - 1] === '\\\\') escaped = true\n    }\n    return new QuotedToken(this.input, begin, this.p, this.file)\n  }\n\n  readFileName (): IdentifierToken {\n    const begin = this.p\n    while (!(this.peekType() & BLANK) && this.peek() !== ',' && this.p < this.N) this.p++\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  match (word: string) {\n    for (let i = 0; i < word.length; i++) {\n      if (word[i] !== this.input[this.p + i]) return false\n    }\n    return true\n  }\n\n  rmatch (pattern: string) {\n    for (let i = 0; i < pattern.length; i++) {\n      if (pattern[pattern.length - 1 - i] !== this.input[this.p - 1 - i]) return false\n    }\n    return true\n  }\n\n  peekType (n = 0) {\n    return TYPES[this.input.charCodeAt(this.p + n)]\n  }\n\n  peek (n = 0) {\n    return this.input[this.p + n]\n  }\n\n  skipBlank () {\n    while (this.peekType() & BLANK) ++this.p\n  }\n}\n","import { IDENTIFIER, TYPES } from '../util/character'\nimport { Trie } from '../util/operator-trie'\n\nexport function matchOperator (str: string, begin: number, trie: Trie, end = str.length) {\n  let node = trie\n  let i = begin\n  let info\n  while (node[str[i]] && i < end) {\n    node = node[str[i++]]\n    if (node['end']) info = node\n  }\n  if (!info) return -1\n  if (info['needBoundary'] && (TYPES[str.charCodeAt(i)] & IDENTIFIER)) return -1\n  return i\n}\n","import { DelimitedToken } from './delimited-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\nimport { Tokenizer } from '../parser/tokenizer'\n\nexport class TagToken extends DelimitedToken {\n  public name: string\n  public args: string\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimTagLeft, trimTagRight, tagDelimiterLeft, tagDelimiterRight } = options\n    const value = input.slice(begin + tagDelimiterLeft.length, end - tagDelimiterRight.length)\n    super(TokenKind.Tag, value, input, begin, end, trimTagLeft, trimTagRight, file)\n\n    const tokenizer = new Tokenizer(this.content, options.operatorsTrie)\n    this.name = tokenizer.readIdentifier().getText()\n    if (!this.name) throw new TokenizationError(`illegal tag syntax`, this)\n\n    tokenizer.skipBlank()\n    this.args = tokenizer.remaining()\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { Tokenizer } from '../../parser/tokenizer'\n\n/**\n * Key-Value Pairs Representing Tag Arguments\n * Example:\n *    For the markup `, foo:'bar', coo:2 reversed %}`,\n *    hash['foo'] === 'bar'\n *    hash['coo'] === 2\n *    hash['reversed'] === undefined\n */\nexport class Hash {\n  hash: { [key: string]: any } = {}\n  constructor (markup: string) {\n    const tokenizer = new Tokenizer(markup, {})\n    for (const hash of tokenizer.readHashes()) {\n      this.hash[hash.name.content] = hash.value\n    }\n  }\n  * render (ctx: Context) {\n    const hash = {}\n    for (const key of Object.keys(this.hash)) {\n      hash[key] = this.hash[key] === undefined ? true : yield evalToken(this.hash[key], ctx)\n    }\n    return hash\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { identify } from '../../util/underscore'\nimport { FilterImplOptions } from './filter-impl-options'\nimport { FilterArg, isKeyValuePair } from '../../parser/filter-arg'\nimport { Liquid } from '../../liquid'\n\nexport class Filter {\n  public name: string\n  public args: FilterArg[]\n  private impl: FilterImplOptions\n  private liquid: Liquid\n\n  public constructor (name: string, impl: FilterImplOptions, args: FilterArg[], liquid: Liquid) {\n    this.name = name\n    this.impl = impl || identify\n    this.args = args\n    this.liquid = liquid\n  }\n  public render (value: any, context: Context) {\n    const argv: any[] = []\n    for (const arg of this.args as FilterArg[]) {\n      if (isKeyValuePair(arg)) argv.push([arg[0], evalToken(arg[1], context)])\n      else argv.push(evalToken(arg, context))\n    }\n    return this.impl.apply({ context, liquid: this.liquid }, [value, ...argv])\n  }\n}\n","import { isArray } from '../util/underscore'\nimport { ValueToken } from '../tokens/value-token'\n\ntype KeyValuePair = [string?, ValueToken?]\n\nexport type FilterArg = ValueToken | KeyValuePair\n\nexport function isKeyValuePair (arr: FilterArg): arr is KeyValuePair { // TODO check\n  return isArray(arr)\n}\n","import { Expression } from '../render/expression'\nimport { Tokenizer } from '../parser/tokenizer'\nimport { Filter } from './filter/filter'\nimport { Context } from '../context/context'\nimport { Liquid } from '../liquid'\n\nexport class Value {\n  public readonly filters: Filter[] = []\n  public readonly initial: Expression\n\n  /**\n   * @param str the value to be valuated, eg.: \"foobar\" | truncate: 3\n   */\n  public constructor (str: string, liquid: Liquid) {\n    const tokenizer = new Tokenizer(str, liquid.options.operatorsTrie)\n    this.initial = tokenizer.readExpression()\n    this.filters = tokenizer.readFilters().map(({ name, args }) => new Filter(name, liquid.filters.get(name), args, liquid))\n  }\n  public * value (ctx: Context, lenient: boolean) {\n    lenient = lenient || (ctx.opts.lenientIf && this.filters.length > 0 && this.filters[0].name === 'default')\n    let val = yield this.initial.evaluate(ctx, lenient)\n\n    for (const filter of this.filters) {\n      val = yield filter.render(val, ctx)\n    }\n    return val\n  }\n}\n","import { isFunction } from '../../util/underscore'\nimport { Liquid } from '../../liquid'\nimport { TemplateImpl } from '../../template/template-impl'\nimport { Emitter, Hash, Context, TagToken, Template, TopLevelToken } from '../../types'\nimport { TagImpl } from './tag-impl'\n\nexport class Tag extends TemplateImpl<TagToken> implements Template {\n  public name: string\n  private impl: TagImpl\n\n  public constructor (token: TagToken, tokens: TopLevelToken[], liquid: Liquid) {\n    super(token)\n    this.name = token.name\n\n    const impl = liquid.tags.get(token.name)\n\n    this.impl = Object.create(impl)\n    this.impl.liquid = liquid\n    if (this.impl.parse) {\n      this.impl.parse(token, tokens)\n    }\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const hash = yield new Hash(this.token.args).render(ctx)\n    const impl = this.impl\n    if (isFunction(impl.render)) return yield impl.render(ctx, emitter, hash)\n  }\n}\n","import { Value } from './value'\nimport { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { Context } from '../context/context'\nimport { Emitter } from '../emitters/emitter'\nimport { OutputToken } from '../tokens/output-token'\nimport { Liquid } from '../liquid'\n\nexport class Output extends TemplateImpl<OutputToken> implements Template {\n  private value: Value\n  public constructor (token: OutputToken, liquid: Liquid) {\n    super(token)\n    this.value = new Value(token.content, liquid)\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const val = yield this.value.value(ctx, false)\n    emitter.write(val)\n  }\n}\n","import { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { HTMLToken } from '../tokens/html-token'\nimport { Context } from '../context/context'\nimport { Emitter } from '../emitters/emitter'\n\nexport class HTML extends TemplateImpl<HTMLToken> implements Template {\n  private str: string\n  public constructor (token: HTMLToken) {\n    super(token)\n    this.str = token.getContent()\n  }\n  public * render (ctx: Context, emitter: Emitter): IterableIterator<void> {\n    emitter.write(this.str)\n  }\n}\n","import { ParseError } from '../util/error'\nimport { Liquid, Tokenizer } from '../liquid'\nimport { ParseStream } from './parse-stream'\nimport { isTagToken, isOutputToken } from '../util/type-guards'\nimport { OutputToken } from '../tokens/output-token'\nimport { Tag } from '../template/tag/tag'\nimport { Output } from '../template/output'\nimport { HTML } from '../template/html'\nimport { Template } from '../template/template'\nimport { TopLevelToken } from '../tokens/toplevel-token'\nimport { Cache } from '../cache/cache'\nimport { Loader, LookupType } from '../fs/loader'\nimport { FS } from '../fs/fs'\n\nexport default class Parser {\n  public parseFile: (file: string, sync?: boolean, type?: LookupType, currentFile?: string) => Iterator<Template[]>\n\n  private liquid: Liquid\n  private fs: FS\n  private cache: Cache<Template[]> | undefined\n  private loader: Loader\n\n  public constructor (liquid: Liquid) {\n    this.liquid = liquid\n    this.cache = this.liquid.options.cache\n    this.fs = this.liquid.options.fs\n    this.parseFile = this.cache ? this._parseFileCached : this._parseFile\n    this.loader = new Loader(this.liquid.options)\n  }\n  public parse (html: string, filepath?: string): Template[] {\n    const tokenizer = new Tokenizer(html, this.liquid.options.operatorsTrie, filepath)\n    const tokens = tokenizer.readTopLevelTokens(this.liquid.options)\n    return this.parseTokens(tokens)\n  }\n  public parseTokens (tokens: TopLevelToken[]) {\n    let token\n    const templates: Template[] = []\n    while ((token = tokens.shift())) {\n      templates.push(this.parseToken(token, tokens))\n    }\n    return templates\n  }\n  public parseToken (token: TopLevelToken, remainTokens: TopLevelToken[]) {\n    try {\n      if (isTagToken(token)) {\n        return new Tag(token, remainTokens, this.liquid)\n      }\n      if (isOutputToken(token)) {\n        return new Output(token as OutputToken, this.liquid)\n      }\n      return new HTML(token)\n    } catch (e) {\n      throw new ParseError(e, token)\n    }\n  }\n  public parseStream (tokens: TopLevelToken[]) {\n    return new ParseStream(tokens, (token, tokens) => this.parseToken(token, tokens))\n  }\n  private * _parseFileCached (file: string, sync?: boolean, type: LookupType = LookupType.Root, currentFile?: string) {\n    const key = this.loader.shouldLoadRelative(file)\n      ? currentFile + ',' + file\n      : type + ':' + file\n    let templates = yield this.cache!.read(key)\n    if (templates) return templates\n\n    templates = yield this._parseFile(file, sync, type, currentFile)\n    this.cache!.write(key, templates)\n    return templates\n  }\n  private * _parseFile (file: string, sync?: boolean, type: LookupType = LookupType.Root, currentFile?: string) {\n    const filepath = yield this.loader.lookup(file, type, sync, currentFile)\n    return this.liquid.parse(sync ? this.fs.readFileSync(filepath) : yield this.fs.readFile(filepath), filepath)\n  }\n}\n","import { Tokenizer, assert, TagImplOptions, TagToken, Context } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.key = tokenizer.readIdentifier().content\n    tokenizer.skipBlank()\n    assert(tokenizer.peek() === '=', () => `illegal token ${token.getText()}`)\n    tokenizer.advance()\n    this.value = tokenizer.remaining()\n  },\n  render: function * (ctx: Context) {\n    ctx.bottom()[this.key] = yield this.liquid._evalValue(this.value, ctx)\n  }\n} as TagImplOptions\n","import { isString, isObject, isArray } from './underscore'\n\nexport function toEnumerable (val: any) {\n  if (isArray(val)) return val\n  if (isString(val) && val.length > 0) return [val]\n  if (isObject(val)) return Object.keys(val).map((key) => [key, val[key]])\n  return []\n}\n\nexport function toArray (val: any) {\n  if (isArray(val)) return val\n  return [ val ]\n}\n","import { Drop } from './drop'\n\nexport class ForloopDrop extends Drop {\n  protected i = 0\n  public name: string\n  public length: number\n  public constructor (length: number, collection: string, variable: string) {\n    super()\n    this.length = length\n    this.name = `${variable}-${collection}`\n  }\n  public next () {\n    this.i++\n  }\n  public index0 () {\n    return this.i\n  }\n  public index () {\n    return this.i + 1\n  }\n  public first () {\n    return this.i === 0\n  }\n  public last () {\n    return this.i === this.length - 1\n  }\n  public rindex () {\n    return this.length - this.i\n  }\n  public rindex0 () {\n    return this.length - this.i - 1\n  }\n  public valueOf () {\n    return JSON.stringify(this)\n  }\n}\n","import { assert, Tokenizer, evalToken, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { toEnumerable } from '../../util/collection'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { Hash } from '../../template/tag/hash'\n\nconst MODIFIERS = ['offset', 'limit', 'reversed']\n\ntype valueof<T> = T[keyof T]\n\nexport default {\n  type: 'block',\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n\n    const variable = tokenizer.readIdentifier()\n    const inStr = tokenizer.readIdentifier()\n    const collection = tokenizer.readValue()\n    assert(\n      variable.size() && inStr.content === 'in' && collection,\n      () => `illegal tag: ${token.getText()}`\n    )\n\n    this.variable = variable.content\n    this.collection = collection\n    this.hash = new Hash(tokenizer.remaining())\n    this.templates = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endfor', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n\n    if (!collection.length) {\n      yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n      return\n    }\n\n    const hash = yield this.hash.render(ctx)\n    const modifiers = this.liquid.options.orderedFilterParameters\n      ? Object.keys(hash).filter(x => MODIFIERS.includes(x))\n      : MODIFIERS.filter(x => hash[x] !== undefined)\n\n    collection = modifiers.reduce((collection, modifier: valueof<typeof MODIFIERS>) => {\n      if (modifier === 'offset') return offset(collection, hash['offset'])\n      if (modifier === 'limit') return limit(collection, hash['limit'])\n      return reversed(collection)\n    }, collection)\n\n    const scope = { forloop: new ForloopDrop(collection.length, this.collection.getText(), this.variable) }\n    ctx.push(scope)\n    for (const item of collection) {\n      scope[this.variable] = item\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      if (emitter['break']) {\n        emitter['break'] = false\n        break\n      }\n      emitter['continue'] = false\n      scope.forloop.next()\n    }\n    ctx.pop()\n  }\n} as TagImplOptions\n\nfunction reversed<T> (arr: Array<T>) {\n  return [...arr].reverse()\n}\n\nfunction offset<T> (arr: Array<T>, count: number) {\n  return arr.slice(count)\n}\n\nfunction limit<T> (arr: Array<T>, count: number) {\n  return arr.slice(0, count)\n}\n","import { Tokenizer, assert, Template, Context, TagImplOptions, TagToken, TopLevelToken } from '../../types'\nimport { evalQuotedToken } from '../../render/expression'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n    this.variable = readVariableName(tokenizer)\n    assert(this.variable, () => `${tagToken.args} not valid identifier`)\n\n    this.templates = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream.on('tag:endcapture', () => stream.stop())\n      .on('template', (tpl: Template) => this.templates.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function * (ctx: Context) {\n    const r = this.liquid.renderer\n    const html = yield r.renderTemplates(this.templates, ctx)\n    ctx.bottom()[this.variable] = html\n  }\n} as TagImplOptions\n\nfunction readVariableName (tokenizer: Tokenizer) {\n  const word = tokenizer.readIdentifier().content\n  if (word) return word\n  const quoted = tokenizer.readQuoted()\n  if (quoted) return evalQuotedToken(quoted)\n}\n","enum BlockMode {\n  /* store rendered html into blocks */\n  OUTPUT,\n  /* output rendered html directly */\n  STORE\n}\n\nexport default BlockMode\n","import { toValue, evalToken, Value, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.cond = new Value(tagToken.args, this.liquid)\n    this.cases = []\n    this.elseTemplates = []\n\n    let p: Template[] = []\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:when', (token: TagToken) => {\n        p = []\n\n        const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n\n        while (!tokenizer.end()) {\n          const value = tokenizer.readValue()\n          this.cases.push({\n            val: value,\n            templates: p\n          })\n          tokenizer.readTo(',')\n        }\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endcase', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const cond = toValue(yield this.cond.value(ctx, ctx.opts.lenientIf))\n    for (const branch of this.cases) {\n      const val = evalToken(branch.val, ctx, ctx.opts.lenientIf)\n      if (val === cond) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { TagToken } from '../../tokens/tag-token'\nimport { TopLevelToken } from '../../tokens/toplevel-token'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endcomment') stream.stop()\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { toEnumerable } from '../../util/collection'\nimport { Liquid } from '../../liquid'\nimport { Token, Template, evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parseFilePath,\n  renderFilePath,\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args, this.liquid.options.operatorsTrie)\n    this['file'] = this.parseFilePath(tokenizer, this.liquid)\n    this['currentFile'] = token.file\n    while (!tokenizer.end()) {\n      tokenizer.skipBlank()\n      const begin = tokenizer.p\n      const keyword = tokenizer.readIdentifier()\n      if (keyword.content === 'with' || keyword.content === 'for') {\n        tokenizer.skipBlank()\n        // can be normal key/value pair, like \"with: true\"\n        if (tokenizer.peek() !== ':') {\n          const value = tokenizer.readValue()\n          // can be normal key, like \"with,\"\n          if (value) {\n            const beforeAs = tokenizer.p\n            const asStr = tokenizer.readIdentifier()\n            let alias\n            if (asStr.content === 'as') alias = tokenizer.readIdentifier()\n            else tokenizer.p = beforeAs\n\n            this[keyword.content] = { value, alias: alias && alias.content }\n            tokenizer.skipBlank()\n            if (tokenizer.peek() === ',') tokenizer.advance()\n            // matched!\n            continue\n          }\n        }\n      }\n      /**\n       * restore cursor if with/for not matched\n       */\n      tokenizer.p = begin\n      break\n    }\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash } = this\n    const filepath = yield this.renderFilePath(this['file'], ctx, liquid)\n    assert(filepath, () => `illegal filename \"${filepath}\"`)\n\n    const childCtx = new Context({}, ctx.opts, ctx.sync)\n    const scope = yield hash.render(ctx)\n    if (this['with']) {\n      const { value, alias } = this['with']\n      scope[alias || filepath] = evalToken(value, ctx)\n    }\n    childCtx.push(scope)\n\n    if (this['for']) {\n      const { value, alias } = this['for']\n      let collection = evalToken(value, ctx)\n      collection = toEnumerable(collection)\n      scope['forloop'] = new ForloopDrop(collection.length, value.getText(), alias)\n      for (const item of collection) {\n        scope[alias] = item\n        const templates = yield liquid._parsePartialFile(filepath, childCtx.sync, this['currentFile'])\n        yield liquid.renderer.renderTemplates(templates, childCtx, emitter)\n        scope.forloop.next()\n      }\n    } else {\n      const templates = yield liquid._parsePartialFile(filepath, childCtx.sync, this['currentFile'])\n      yield liquid.renderer.renderTemplates(templates, childCtx, emitter)\n    }\n  }\n} as TagImplOptions\n\ntype ParsedFileName = Template[] | Token | string | undefined\n\n/**\n * @return null for \"none\",\n * @return Template[] for quoted with tags and/or filters\n * @return Token for expression (not quoted)\n * @throws TypeError if cannot read next token\n */\nexport function parseFilePath (tokenizer: Tokenizer, liquid: Liquid): ParsedFileName | null {\n  if (liquid.options.dynamicPartials) {\n    const file = tokenizer.readValue()\n    if (file === undefined) throw new TypeError(`illegal argument \"${tokenizer.input}\"`)\n    if (file.getText() === 'none') return null\n    if (TypeGuards.isQuotedToken(file)) {\n      // for filenames like \"files/{{file}}\", eval as liquid template\n      const tpls = liquid.parse(evalQuotedToken(file))\n      // for filenames like \"files/file.liquid\", extract the string directly\n      if (tpls.length === 1 && TypeGuards.isHTMLToken(tpls[0].token)) return tpls[0].token.getContent()\n      return tpls\n    }\n    return file\n  }\n  const filepath = tokenizer.readFileName().getText()\n  return filepath === 'none' ? null : filepath\n}\n\nexport function renderFilePath (file: ParsedFileName, ctx: Context, liquid: Liquid) {\n  if (typeof file === 'string') return file\n  if (Array.isArray(file)) return liquid.renderer.renderTemplates(file, ctx)\n  return evalToken(file, ctx)\n}\n","import { assert, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\nimport { parseFilePath, renderFilePath } from './render'\n\nexport default {\n  parseFilePath,\n  renderFilePath,\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args, this.liquid.options.operatorsTrie)\n    this['file'] = this.parseFilePath(tokenizer, this.liquid)\n    this['currentFile'] = token.file\n\n    const begin = tokenizer.p\n    const withStr = tokenizer.readIdentifier()\n    if (withStr.content === 'with') {\n      tokenizer.skipBlank()\n      if (tokenizer.peek() !== ':') {\n        this.withVar = tokenizer.readValue()\n      } else tokenizer.p = begin\n    } else tokenizer.p = begin\n\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, withVar } = this\n    const { renderer } = liquid\n    const filepath = yield this.renderFilePath(this['file'], ctx, liquid)\n    assert(filepath, () => `illegal filename \"${filepath}\"`)\n\n    const saved = ctx.saveRegister('blocks', 'blockMode')\n    ctx.setRegister('blocks', {})\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n    const scope = yield hash.render(ctx)\n    if (withVar) scope[filepath] = evalToken(withVar, ctx)\n    const templates = yield liquid._parsePartialFile(filepath, ctx.sync, this['currentFile'])\n    ctx.push(scope)\n    yield renderer.renderTemplates(templates, ctx, emitter)\n    ctx.pop()\n    ctx.restoreRegister(saved)\n  }\n} as TagImplOptions\n","import { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { isNumber, stringify } from '../../util/underscore'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    emitter.write(stringify(--scope[this.variable]))\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { evalToken, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n    const group = tokenizer.readValue()\n    tokenizer.skipBlank()\n\n    this.candidates = []\n\n    if (group) {\n      if (tokenizer.peek() === ':') {\n        this.group = group\n        tokenizer.advance()\n      } else this.candidates.push(group)\n    }\n\n    while (!tokenizer.end()) {\n      const value = tokenizer.readValue()\n      if (value) this.candidates.push(value)\n      tokenizer.readTo(',')\n    }\n    assert(this.candidates.length, () => `empty candidates: ${tagToken.getText()}`)\n  },\n\n  render: function (ctx: Context, emitter: Emitter) {\n    const group = evalToken(this.group, ctx)\n    const fingerprint = `cycle:${group}:` + this.candidates.join(',')\n    const groups = ctx.getRegister('cycle')\n    let idx = groups[fingerprint]\n\n    if (idx === undefined) {\n      idx = groups[fingerprint] = 0\n    }\n\n    const candidate = this.candidates[idx]\n    idx = (idx + 1) % this.candidates.length\n    groups[fingerprint] = idx\n    const html = evalToken(candidate, ctx)\n    emitter.write(html)\n  }\n} as TagImplOptions\n","import { Value, Emitter, isTruthy, TagToken, TopLevelToken, Context, Template, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.branches = []\n    this.elseTemplates = []\n\n    let p\n    this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        predicate: new Value(tagToken.args, this.liquid),\n        templates: (p = [])\n      }))\n      .on('tag:elsif', (token: TagToken) => this.branches.push({\n        predicate: new Value(token.args, this.liquid),\n        templates: (p = [])\n      }))\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endif', function () { this.stop() })\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => { throw new Error(`tag ${tagToken.getText()} not closed`) })\n      .start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n\n    for (const { predicate, templates } of this.branches) {\n      const value = yield predicate.value(ctx, ctx.opts.lenientIf)\n      if (isTruthy(value, ctx)) {\n        yield r.renderTemplates(templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { isNumber, stringify } from '../../util/underscore'\nimport { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    const val = scope[this.variable]\n    scope[this.variable]++\n    emitter.write(stringify(val))\n  }\n} as TagImplOptions\n","import { assert, Tokenizer, Emitter, Hash, TagToken, TopLevelToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\nimport { parseFilePath, renderFilePath } from './render'\nimport { BlankDrop } from '../../drop/blank-drop'\n\nexport default {\n  parseFilePath,\n  renderFilePath,\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this['file'] = this.parseFilePath(tokenizer, this.liquid)\n    this['currentFile'] = token.file\n    this.hash = new Hash(tokenizer.remaining())\n    this.tpls = this.liquid.parser.parseTokens(remainTokens)\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, file } = this\n    const { renderer } = liquid\n    if (file === null) {\n      ctx.setRegister('blockMode', BlockMode.OUTPUT)\n      yield renderer.renderTemplates(this.tpls, ctx, emitter)\n      return\n    }\n    const filepath = yield this.renderFilePath(this['file'], ctx, liquid)\n    assert(filepath, () => `illegal filename \"${filepath}\"`)\n    const templates = yield liquid._parseLayoutFile(filepath, ctx.sync, this['currentFile'])\n\n    // render remaining contents and store rendered results\n    ctx.setRegister('blockMode', BlockMode.STORE)\n    const html = yield renderer.renderTemplates(this.tpls, ctx)\n    const blocks = ctx.getRegister('blocks')\n\n    // set whole content to anonymous block if anonymous doesn't specified\n    if (blocks[''] === undefined) blocks[''] = (parent: BlankDrop, emitter: Emitter) => emitter.write(html)\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n\n    // render the layout file use stored blocks\n    ctx.push(yield hash.render(ctx))\n    yield renderer.renderTemplates(templates, ctx, emitter)\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { Drop } from './drop'\n\nexport class BlockDrop extends Drop {\n  constructor (\n    // the block render from layout template\n    private superBlockRender: () => Iterable<any> = () => ''\n  ) {\n    super()\n  }\n  /**\n   * Provide parent access in child block by\n   * {{ block.super }}\n   */\n  public super () {\n    return this.superBlockRender()\n  }\n}\n","import BlockMode from '../../context/block-mode'\nimport { BlockDrop } from '../../drop/block-drop'\nimport { TagToken, TopLevelToken, Template, Context, TagImpl, Emitter } from '../../types'\n\nexport default {\n  parse (this: TagImpl, token: TagToken, remainTokens: TopLevelToken[]) {\n    const match = /\\w+/.exec(token.args)\n    this.block = match ? match[0] : ''\n    this.tpls = [] as Template[]\n    this.liquid.parser.parseStream(remainTokens)\n      .on('tag:endblock', function () { this.stop() })\n      .on('template', (tpl: Template) => this.tpls.push(tpl))\n      .on('end', () => { throw new Error(`tag ${token.getText()} not closed`) })\n      .start()\n  },\n\n  * render (this: TagImpl, ctx: Context, emitter: Emitter) {\n    const blockRender = this.getBlockRender(ctx)\n    if (ctx.getRegister('blockMode') === BlockMode.STORE) {\n      ctx.getRegister('blocks')[this.block] = blockRender\n    } else {\n      yield blockRender(new BlockDrop(), emitter)\n    }\n  },\n\n  getBlockRender (this: TagImpl, ctx: Context) {\n    const { liquid, tpls } = this\n    const renderChild = ctx.getRegister('blocks')[this.block]\n    const renderCurrent = function * (superBlock: BlockDrop, emitter: Emitter) {\n      // add {{ block.super }} support when rendering\n      ctx.push({ block: superBlock })\n      yield liquid.renderer.renderTemplates(tpls, ctx, emitter)\n      ctx.pop()\n    }\n    return renderChild\n      ? (superBlock: BlockDrop, emitter: Emitter) => renderChild(new BlockDrop(() => renderCurrent(superBlock, emitter)), emitter)\n      : renderCurrent\n  }\n}\n","import { TagToken, TopLevelToken, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.tokens = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endraw') stream.stop()\n        else this.tokens.push(token)\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function () {\n    return this.tokens.map((token: TopLevelToken) => token.getText()).join('')\n  }\n} as TagImplOptions\n","import { ForloopDrop } from './forloop-drop'\n\nexport class TablerowloopDrop extends ForloopDrop {\n  private cols: number\n  public constructor (length: number, cols: number, collection: string, variable: string) {\n    super(length, collection, variable)\n    this.length = length\n    this.cols = cols\n  }\n  public row () {\n    return Math.floor(this.i / this.cols) + 1\n  }\n  public col0 () {\n    return (this.i % this.cols)\n  }\n  public col () {\n    return this.col0() + 1\n  }\n  public col_first () {  // eslint-disable-line\n    return this.col0() === 0\n  }\n  public col_last () { // eslint-disable-line\n    return this.col() === this.cols\n  }\n}\n","import assign from './assign'\nimport For from './for'\nimport capture from './capture'\nimport Case from './case'\nimport comment from './comment'\nimport include from './include'\nimport render from './render'\nimport decrement from './decrement'\nimport cycle from './cycle'\nimport If from './if'\nimport increment from './increment'\nimport layout from './layout'\nimport block from './block'\nimport raw from './raw'\nimport tablerow from './tablerow'\nimport unless from './unless'\nimport Break from './break'\nimport Continue from './continue'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nconst tags: { [key: string]: TagImplOptions } = {\n  assign, 'for': For, capture, 'case': Case, comment, include, render, decrement, increment, cycle, 'if': If, layout, block, raw, tablerow, unless, 'break': Break, 'continue': Continue\n}\n\nexport default tags\n","import { toEnumerable } from '../../util/collection'\nimport { assert, evalToken, Emitter, Hash, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { TablerowloopDrop } from '../../drop/tablerowloop-drop'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n\n    const variable = tokenizer.readIdentifier()\n    tokenizer.skipBlank()\n\n    const tmp = tokenizer.readIdentifier()\n    assert(tmp && tmp.content === 'in', () => `illegal tag: ${tagToken.getText()}`)\n\n    this.variable = variable.content\n    this.collection = tokenizer.readValue()\n    this.hash = new Hash(tokenizer.remaining())\n    this.templates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:endtablerow', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    const cols = hash.cols || collection.length\n\n    const r = this.liquid.renderer\n    const tablerowloop = new TablerowloopDrop(collection.length, cols, this.collection.getText(), this.variable)\n    const scope = { tablerowloop }\n    ctx.push(scope)\n\n    for (let idx = 0; idx < collection.length; idx++, tablerowloop.next()) {\n      scope[this.variable] = collection[idx]\n      if (tablerowloop.col0() === 0) {\n        if (tablerowloop.row() !== 1) emitter.write('</tr>')\n        emitter.write(`<tr class=\"row${tablerowloop.row()}\">`)\n      }\n      emitter.write(`<td class=\"col${tablerowloop.col()}\">`)\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      emitter.write('</td>')\n    }\n    if (collection.length) emitter.write('</tr>')\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { Value, TopLevelToken, Template, Emitter, isTruthy, isFalsy, Context, TagImplOptions, TagToken } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.branches = []\n    this.elseTemplates = []\n    let p\n    this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        predicate: new Value(tagToken.args, this.liquid),\n        test: isFalsy,\n        templates: (p = [])\n      }))\n      .on('tag:elsif', (token: TagToken) => this.branches.push({\n        predicate: new Value(token.args, this.liquid),\n        test: isTruthy,\n        templates: (p = [])\n      }))\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endunless', function () { this.stop() })\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => { throw new Error(`tag ${tagToken.getText()} not closed`) })\n      .start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n\n    for (const { predicate, test, templates } of this.branches) {\n      const value = yield predicate.value(ctx, ctx.opts.lenientIf)\n      if (test(value, ctx)) {\n        yield r.renderTemplates(templates, ctx, emitter)\n        return\n      }\n    }\n\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter['break'] = true\n  }\n}\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter['continue'] = true\n  }\n}\n","import { stringify } from '../../util/underscore'\n\nconst escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n}\nconst unescapeMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&#34;': '\"',\n  '&#39;': \"'\"\n}\n\nexport function escape (str: string) {\n  return stringify(str).replace(/&|<|>|\"|'/g, m => escapeMap[m])\n}\n\nfunction unescape (str: string) {\n  return String(str).replace(/&(amp|lt|gt|#34|#39);/g, m => unescapeMap[m])\n}\n\nexport function escapeOnce (str: string) {\n  return escape(unescape(str))\n}\n\nexport function newlineToBr (v: string) {\n  return v.replace(/\\n/g, '<br />\\n')\n}\n\nexport function stripHtml (v: string) {\n  return v.replace(/<script.*?<\\/script>|<!--.*?-->|<style.*?<\\/style>|<.*?>/g, '')\n}\n","import { caseInsensitiveCompare } from '../../util/underscore'\n\nexport const abs = Math.abs\nexport const atLeast = Math.max\nexport const atMost = Math.min\nexport const ceil = Math.ceil\nexport const dividedBy = (v: number, arg: number) => v / arg\nexport const floor = Math.floor\nexport const minus = (v: number, arg: number) => v - arg\nexport const modulo = (v: number, arg: number) => v % arg\nexport const times = (v: number, arg: number) => v * arg\n\nexport function round (v: number, arg = 0) {\n  const amp = Math.pow(10, arg)\n  return Math.round(v * amp) / amp\n}\n\nexport function plus (v: number, arg: number) {\n  return Number(v) + Number(arg)\n}\n\nexport function sortNatural (input: any[], property?: string) {\n  if (!input || !input.sort) return []\n  if (property !== undefined) {\n    return [...input].sort(\n      (lhs, rhs) => caseInsensitiveCompare(lhs[property], rhs[property])\n    )\n  }\n  return [...input].sort(caseInsensitiveCompare)\n}\n","import { changeCase, padStart, padEnd } from './underscore'\n\nconst rFormat = /%([-_0^#:]+)?(\\d+)?([EO])?(.)/\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n  'September', 'October', 'November', 'December'\n]\nconst dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n]\nconst monthNamesShort = monthNames.map(abbr)\nconst dayNamesShort = dayNames.map(abbr)\nconst suffixes = {\n  1: 'st',\n  2: 'nd',\n  3: 'rd',\n  'default': 'th'\n}\ninterface FormatOptions {\n  flags: object;\n  width?: string;\n  modifier?: string;\n}\n\nfunction abbr (str: string) {\n  return str.slice(0, 3)\n}\n\n// prototype extensions\nfunction daysInMonth (d: Date) {\n  const feb = isLeapYear(d) ? 29 : 28\n  return [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n}\nfunction getDayOfYear (d: Date) {\n  let num = 0\n  for (let i = 0; i < d.getMonth(); ++i) {\n    num += daysInMonth(d)[i]\n  }\n  return num + d.getDate()\n}\nfunction getWeekOfYear (d: Date, startDay: number) {\n  // Skip to startDay of this week\n  const now = getDayOfYear(d) + (startDay - d.getDay())\n  // Find the first startDay of the year\n  const jan1 = new Date(d.getFullYear(), 0, 1)\n  const then = (7 - jan1.getDay() + startDay)\n  return String(Math.floor((now - then) / 7) + 1)\n}\nfunction isLeapYear (d: Date) {\n  const year = d.getFullYear()\n  return !!((year & 3) === 0 && (year % 100 || (year % 400 === 0 && year)))\n}\nfunction getSuffix (d: Date) {\n  const str = d.getDate().toString()\n  const index = parseInt(str.slice(-1))\n  return suffixes[index] || suffixes['default']\n}\nfunction century (d: Date) {\n  return parseInt(d.getFullYear().toString().substring(0, 2), 10)\n}\n\n// default to 0\nconst padWidths = {\n  d: 2,\n  e: 2,\n  H: 2,\n  I: 2,\n  j: 3,\n  k: 2,\n  l: 2,\n  L: 3,\n  m: 2,\n  M: 2,\n  S: 2,\n  U: 2,\n  W: 2\n}\n\n// default to '0'\nconst padChars = {\n  a: ' ',\n  A: ' ',\n  b: ' ',\n  B: ' ',\n  c: ' ',\n  e: ' ',\n  k: ' ',\n  l: ' ',\n  p: ' ',\n  P: ' '\n}\nconst formatCodes = {\n  a: (d: Date) => dayNamesShort[d.getDay()],\n  A: (d: Date) => dayNames[d.getDay()],\n  b: (d: Date) => monthNamesShort[d.getMonth()],\n  B: (d: Date) => monthNames[d.getMonth()],\n  c: (d: Date) => d.toLocaleString(),\n  C: (d: Date) => century(d),\n  d: (d: Date) => d.getDate(),\n  e: (d: Date) => d.getDate(),\n  H: (d: Date) => d.getHours(),\n  I: (d: Date) => String(d.getHours() % 12 || 12),\n  j: (d: Date) => getDayOfYear(d),\n  k: (d: Date) => d.getHours(),\n  l: (d: Date) => String(d.getHours() % 12 || 12),\n  L: (d: Date) => d.getMilliseconds(),\n  m: (d: Date) => d.getMonth() + 1,\n  M: (d: Date) => d.getMinutes(),\n  N: (d: Date, opts: FormatOptions) => {\n    const width = Number(opts.width) || 9\n    const str = String(d.getMilliseconds()).substr(0, width)\n    return padEnd(str, width, '0')\n  },\n  p: (d: Date) => (d.getHours() < 12 ? 'AM' : 'PM'),\n  P: (d: Date) => (d.getHours() < 12 ? 'am' : 'pm'),\n  q: (d: Date) => getSuffix(d),\n  s: (d: Date) => Math.round(d.valueOf() / 1000),\n  S: (d: Date) => d.getSeconds(),\n  u: (d: Date) => d.getDay() || 7,\n  U: (d: Date) => getWeekOfYear(d, 0),\n  w: (d: Date) => d.getDay(),\n  W: (d: Date) => getWeekOfYear(d, 1),\n  x: (d: Date) => d.toLocaleDateString(),\n  X: (d: Date) => d.toLocaleTimeString(),\n  y: (d: Date) => d.getFullYear().toString().substring(2, 4),\n  Y: (d: Date) => d.getFullYear(),\n  z: (d: Date, opts: FormatOptions) => {\n    const nOffset = Math.abs(d.getTimezoneOffset())\n    const h = Math.floor(nOffset / 60)\n    const m = nOffset % 60\n    return (d.getTimezoneOffset() > 0 ? '-' : '+') +\n      padStart(h, 2, '0') +\n      (opts.flags[':'] ? ':' : '') +\n      padStart(m, 2, '0')\n  },\n  't': () => '\\t',\n  'n': () => '\\n',\n  '%': () => '%'\n};\n(formatCodes as any).h = formatCodes.b\n\nexport default function (d: Date, formatStr: string) {\n  let output = ''\n  let remaining = formatStr\n  let match\n  while ((match = rFormat.exec(remaining))) {\n    output += remaining.slice(0, match.index)\n    remaining = remaining.slice(match.index + match[0].length)\n    output += format(d, match)\n  }\n  return output + remaining\n}\n\nfunction format (d: Date, match: RegExpExecArray) {\n  const [input, flagStr = '', width, modifier, conversion] = match\n  const convert = formatCodes[conversion]\n  if (!convert) return input\n  const flags = {}\n  for (const flag of flagStr) flags[flag] = true\n  let ret = String(convert(d, { flags, width, modifier }))\n  let padChar = padChars[conversion] || '0'\n  let padWidth = width || padWidths[conversion] || 0\n  if (flags['^']) ret = ret.toUpperCase()\n  else if (flags['#']) ret = changeCase(ret)\n  if (flags['_']) padChar = ' '\n  else if (flags['0']) padChar = '0'\n  if (flags['-']) padWidth = 0\n  return padStart(ret, padWidth, padChar)\n}\n","// one minute in milliseconds\nconst OneMinute = 60000\nconst hostTimezoneOffset = new Date().getTimezoneOffset()\nconst ISO8601_TIMEZONE_PATTERN = /([zZ]|([+-])(\\d{2}):(\\d{2}))$/\n\n/**\n * A date implementation with timezone info, just like Ruby date\n *\n * Implementation:\n * - create a Date offset by it's timezone difference, avoiding overriding a bunch of methods\n * - rewrite getTimezoneOffset() to trick strftime\n */\nexport class TimezoneDate extends Date {\n  private timezoneOffset?: number\n  constructor (init: string | number | Date, timezoneOffset: number) {\n    if (init instanceof TimezoneDate) return init\n    const diff = (hostTimezoneOffset - timezoneOffset) * OneMinute\n    const time = new Date(init).getTime() + diff\n    super(time)\n    this.timezoneOffset = timezoneOffset\n  }\n  getTimezoneOffset () {\n    return this.timezoneOffset!\n  }\n\n  /**\n   * Create a Date object fixed to it's declared Timezone. Both\n   * - 2021-08-06T02:29:00.000Z and\n   * - 2021-08-06T02:29:00.000+08:00\n   * will always be displayed as\n   * - 2021-08-06 02:29:00\n   * regardless timezoneOffset in JavaScript realm\n   *\n   * The implementation hack:\n   * Instead of calling `.getMonth()`/`.getUTCMonth()` respect to `preserveTimezones`,\n   * we create a different Date to trick strftime, it's both simpler and more performant.\n   * Given that a template is expected to be parsed fewer times than rendered.\n   */\n  static createDateFixedToTimezone (dateString: string) {\n    const m = dateString.match(ISO8601_TIMEZONE_PATTERN)\n    // representing a UTC timestamp\n    if (m && m[1] === 'Z') {\n      return new TimezoneDate(+new Date(dateString), 0)\n    }\n    // has a timezone specified\n    if (m && m[2] && m[3] && m[4]) {\n      const [, , sign, hours, minutes] = m\n      const delta = (sign === '+' ? -1 : 1) * (parseInt(hours, 10) * 60 + parseInt(minutes, 10))\n      return new TimezoneDate(+new Date(dateString), delta)\n    }\n    return new Date(dateString)\n  }\n}\n","export const urlDecode = (x: string) => x.split('+').map(decodeURIComponent).join(' ')\nexport const urlEncode = (x: string) => x.split(' ').map(encodeURIComponent).join('+')\n","import { isArray, isNil, last as arrayLast } from '../../util/underscore'\nimport { toArray } from '../../util/collection'\nimport { isTruthy } from '../../render/boolean'\nimport { FilterImpl } from '../../template/filter/filter-impl'\nimport { Scope } from '../../context/scope'\n\nexport const join = (v: any[], arg: string) => v.join(arg === undefined ? ' ' : arg)\nexport const last = (v: any) => isArray(v) ? arrayLast(v) : ''\nexport const first = (v: any) => isArray(v) ? v[0] : ''\nexport const reverse = (v: any[]) => [...v].reverse()\n\nexport function sort<T> (this: FilterImpl, arr: T[], property?: string) {\n  const getValue = (obj: Scope) => property ? this.context.getFromScope(obj, property.split('.')) : obj\n  return toArray(arr).sort((lhs, rhs) => {\n    lhs = getValue(lhs)\n    rhs = getValue(rhs)\n    return lhs < rhs ? -1 : (lhs > rhs ? 1 : 0)\n  })\n}\n\nexport const size = (v: string | any[]) => (v && v.length) || 0\n\nexport function map<T1, T2> (this: FilterImpl, arr: Scope[], property: string) {\n  return toArray(arr).map(obj => this.context.getFromScope(obj, property.split('.')))\n}\n\nexport function compact<T> (this: FilterImpl, arr: T[]) {\n  return toArray(arr).filter(x => !isNil(x))\n}\n\nexport function concat<T1, T2> (v: T1[], arg: T2[] | T2): (T1 | T2)[] {\n  return toArray(v).concat(arg)\n}\n\nexport function slice<T> (v: T[], begin: number, length = 1): T[] {\n  begin = begin < 0 ? v.length + begin : begin\n  return v.slice(begin, begin + length)\n}\n\nexport function where<T extends object> (this: FilterImpl, arr: T[], property: string, expected?: any): T[] {\n  return toArray(arr).filter(obj => {\n    const value = this.context.getFromScope(obj, String(property).split('.'))\n    return expected === undefined ? isTruthy(value, this.context) : value === expected\n  })\n}\n\nexport function uniq<T> (arr: T[]): T[] {\n  const u = {}\n  return (arr || []).filter(val => {\n    if (u.hasOwnProperty(String(val))) return false\n    u[String(val)] = true\n    return true\n  })\n}\n","import strftime from '../../util/strftime'\nimport { isString, isNumber } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\nimport { TimezoneDate } from '../../util/timezone-date'\n\nexport function date (this: FilterImpl, v: string | Date, arg: string) {\n  const opts = this.context.opts\n  let date: Date\n  if (v === 'now' || v === 'today') {\n    date = new Date()\n  } else if (isNumber(v)) {\n    date = new Date(v * 1000)\n  } else if (isString(v)) {\n    if (/^\\d+$/.test(v)) {\n      date = new Date(+v * 1000)\n    } else if (opts.preserveTimezones) {\n      date = TimezoneDate.createDateFixedToTimezone(v)\n    } else {\n      date = new Date(v)\n    }\n  } else {\n    date = v\n  }\n  if (!isValidDate(date)) return v\n  if (opts.hasOwnProperty('timezoneOffset')) {\n    date = new TimezoneDate(date, opts.timezoneOffset!)\n  }\n  return strftime(date, arg)\n}\n\nfunction isValidDate (date: any): date is Date {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n","import { isFalsy } from '../../render/boolean'\nimport { isArray, isString, toValue } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\n\nexport function Default<T1, T2> (this: FilterImpl, v: string | T1, arg: T2): string | T1 | T2 {\n  if (isArray(v) || isString(v)) return v.length ? v : arg\n  return isFalsy(toValue(v), this.context) ? arg : v\n}\nexport function json (v: any) {\n  return JSON.stringify(v)\n}\n","/**\n * String related filters\n *\n * * prefer stringify() to String() since `undefined`, `null` should eval ''\n */\nimport { stringify } from '../../util/underscore'\nimport { assert } from '../../util/assert'\n\nexport function append (v: string, arg: string) {\n  assert(arguments.length === 2, () => 'append expect 2 arguments')\n  return stringify(v) + stringify(arg)\n}\n\nexport function prepend (v: string, arg: string) {\n  assert(arguments.length === 2, () => 'prepend expect 2 arguments')\n  return stringify(arg) + stringify(v)\n}\n\nexport function lstrip (v: string) {\n  return stringify(v).replace(/^\\s+/, '')\n}\n\nexport function downcase (v: string) {\n  return stringify(v).toLowerCase()\n}\n\nexport function upcase (str: string) {\n  return stringify(str).toUpperCase()\n}\n\nexport function remove (v: string, arg: string) {\n  return stringify(v).split(String(arg)).join('')\n}\n\nexport function removeFirst (v: string, l: string) {\n  return stringify(v).replace(String(l), '')\n}\n\nexport function rstrip (str: string) {\n  return stringify(str).replace(/\\s+$/, '')\n}\n\nexport function split (v: string, arg: string) {\n  return stringify(v).split(String(arg))\n}\n\nexport function strip (v: string) {\n  return stringify(v).trim()\n}\n\nexport function stripNewlines (v: string) {\n  return stringify(v).replace(/\\n/g, '')\n}\n\nexport function capitalize (str: string) {\n  str = stringify(str)\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n}\n\nexport function replace (v: string, pattern: string, replacement: string) {\n  return stringify(v).split(String(pattern)).join(replacement)\n}\n\nexport function replaceFirst (v: string, arg1: string, arg2: string) {\n  return stringify(v).replace(String(arg1), arg2)\n}\n\nexport function truncate (v: string, l = 50, o = '...') {\n  v = stringify(v)\n  if (v.length <= l) return v\n  return v.substr(0, l - o.length) + o\n}\n\nexport function truncatewords (v: string, l = 15, o = '...') {\n  const arr = v.split(/\\s+/)\n  let ret = arr.slice(0, l).join(' ')\n  if (arr.length >= l) ret += o\n  return ret\n}\n","import { TagImplOptions } from './tag-impl-options'\nimport { assert } from '../../util/assert'\n\nexport class TagMap {\n  private impls: {[key: string]: TagImplOptions} = {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl, () => `tag \"${name}\" not found`)\n    return impl\n  }\n\n  set (name: string, impl: TagImplOptions) {\n    this.impls[name] = impl\n  }\n}\n","import { FilterImplOptions } from './filter-impl-options'\nimport { Filter } from './filter'\nimport { FilterArg } from '../../parser/filter-arg'\nimport { assert } from '../../util/assert'\nimport { Liquid } from '../../liquid'\n\nexport class FilterMap {\n  private impls: {[key: string]: FilterImplOptions} = {}\n\n  constructor (\n    private readonly strictFilters: boolean,\n    private readonly liquid: Liquid\n  ) {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl || !this.strictFilters, () => `undefined filter: ${name}`)\n    return impl\n  }\n\n  set (name: string, impl: FilterImplOptions) {\n    this.impls[name] = impl\n  }\n\n  create (name: string, args: FilterArg[]) {\n    return new Filter(name, this.get(name), args, this.liquid)\n  }\n}\n","import { Context } from './context/context'\nimport { forOwn, snakeCase } from './util/underscore'\nimport { Template } from './template/template'\nimport { LookupType } from './fs/loader'\nimport { Render } from './render/render'\nimport Parser from './parser/parser'\nimport { TagImplOptions } from './template/tag/tag-impl-options'\nimport { Value } from './template/value'\nimport builtinTags from './builtin/tags'\nimport * as builtinFilters from './builtin/filters'\nimport { TagMap } from './template/tag/tag-map'\nimport { FilterMap } from './template/filter/filter-map'\nimport { LiquidOptions, normalizeDirectoryList, NormalizedFullOptions, applyDefault, normalize } from './liquid-options'\nimport { FilterImplOptions } from './template/filter/filter-impl-options'\nimport { toPromise, toValue } from './util/async'\n\nexport * from './util/error'\nexport * from './types'\n\nexport class Liquid {\n  public readonly options: NormalizedFullOptions\n  public readonly renderer: Render\n  public readonly parser: Parser\n  public readonly filters: FilterMap\n  public readonly tags: TagMap\n\n  public constructor (opts: LiquidOptions = {}) {\n    this.options = applyDefault(normalize(opts))\n    this.parser = new Parser(this)\n    this.renderer = new Render()\n    this.filters = new FilterMap(this.options.strictFilters, this)\n    this.tags = new TagMap()\n\n    forOwn(builtinTags, (conf: TagImplOptions, name: string) => this.registerTag(snakeCase(name), conf))\n    forOwn(builtinFilters, (handler: FilterImplOptions, name: string) => this.registerFilter(snakeCase(name), handler))\n  }\n  public parse (html: string, filepath?: string): Template[] {\n    return this.parser.parse(html, filepath)\n  }\n\n  public _render (tpl: Template[], scope?: object, sync?: boolean): IterableIterator<any> {\n    const ctx = new Context(scope, this.options, sync)\n    return this.renderer.renderTemplates(tpl, ctx)\n  }\n  public async render (tpl: Template[], scope?: object): Promise<any> {\n    return toPromise(this._render(tpl, scope, false))\n  }\n  public renderSync (tpl: Template[], scope?: object): any {\n    return toValue(this._render(tpl, scope, true))\n  }\n  public renderToNodeStream (tpl: Template[], scope?: object): NodeJS.ReadableStream {\n    const ctx = new Context(scope, this.options)\n    return this.renderer.renderTemplatesToNodeStream(tpl, ctx)\n  }\n\n  public _parseAndRender (html: string, scope?: object, sync?: boolean): IterableIterator<any> {\n    const tpl = this.parse(html)\n    return this._render(tpl, scope, sync)\n  }\n  public async parseAndRender (html: string, scope?: object): Promise<any> {\n    return toPromise(this._parseAndRender(html, scope, false))\n  }\n  public parseAndRenderSync (html: string, scope?: object): any {\n    return toValue(this._parseAndRender(html, scope, true))\n  }\n\n  public _parsePartialFile (file: string, sync?: boolean, currentFile?: string) {\n    return this.parser.parseFile(file, sync, LookupType.Partials, currentFile)\n  }\n  public _parseLayoutFile (file: string, sync?: boolean, currentFile?: string) {\n    return this.parser.parseFile(file, sync, LookupType.Layouts, currentFile)\n  }\n  public async parseFile (file: string): Promise<Template[]> {\n    return toPromise(this.parser.parseFile(file, false))\n  }\n  public parseFileSync (file: string): Template[] {\n    return toValue(this.parser.parseFile(file, true))\n  }\n  public async renderFile (file: string, ctx?: object) {\n    const templates = await this.parseFile(file)\n    return this.render(templates, ctx)\n  }\n  public renderFileSync (file: string, ctx?: object) {\n    const templates = this.parseFileSync(file)\n    return this.renderSync(templates, ctx)\n  }\n  public async renderFileToNodeStream (file: string, scope?: object) {\n    const templates = await this.parseFile(file)\n    return this.renderToNodeStream(templates, scope)\n  }\n\n  public _evalValue (str: string, ctx: Context): IterableIterator<any> {\n    const value = new Value(str, this)\n    return value.value(ctx, false)\n  }\n  public async evalValue (str: string, ctx: Context): Promise<any> {\n    return toPromise(this._evalValue(str, ctx))\n  }\n  public evalValueSync (str: string, ctx: Context): any {\n    return toValue(this._evalValue(str, ctx))\n  }\n\n  public registerFilter (name: string, filter: FilterImplOptions) {\n    this.filters.set(name, filter)\n  }\n  public registerTag (name: string, tag: TagImplOptions) {\n    this.tags.set(name, tag)\n  }\n  public plugin (plugin: (this: Liquid, L: typeof Liquid) => void) {\n    return plugin.call(this, Liquid)\n  }\n  public express () {\n    const self = this // eslint-disable-line\n    let firstCall = true\n\n    return function (this: any, filePath: string, ctx: object, callback: (err: Error | null, rendered: string) => void) {\n      if (firstCall) {\n        firstCall = false\n        self.options.root.unshift(...normalizeDirectoryList(this.root))\n      }\n      self.renderFile(filePath, ctx).then(html => callback(null, html) as any, callback as any)\n    }\n  }\n}\n"],"names":["Drop","key","toStr","Object","prototype","toString","toLowerCase","String","isString","value","isFunction","stringify","toValue","isNil","valueOf","isNumber","isArray","call","forOwn","object","iteratee","k","hasOwnProperty","last","arr","length","isObject","type","range","start","stop","step","i","push","padStart","str","ch","pad","add","n","identify","val","snakeCase","replace","_","a","b","caseInsensitiveCompare","next","prev","this","LRU","cache","node","Node","head","size","ensureLimit","remove","write","tail","limit","resolve","root","filepath","ext","path","base","document","createElement","href","getElementsByTagName","insertBefore","firstChild","resolved","removeChild","domResolve","origin","split","pop","test","url","Promise","reject","xhr","XMLHttpRequest","onload","status","responseText","Error","statusText","onerror","open","send","isComparable","arg","equals","isTruthy","ctx","isFalsy","opts","jsTruthy","defaultOperators","==","l","r","!=",">","gt","lt","<",">=","geq","leq","<=","contains","indexOf","and","or","TYPES","IDENTIFIER","BLANK","INLINE_BLANK","createTrie","operators","trie","_b","tslib_1.__values","entries","_d","name_1","handler","c","charCodeAt","needBoundary","end","defaultOptions","layouts","partials","relativeReference","undefined","extname","fs","dynamicPartials","trimTagRight","trimTagLeft","trimOutputRight","trimOutputLeft","greedy","tagDelimiterLeft","tagDelimiterRight","outputDelimiterLeft","outputDelimiterRight","preserveTimezones","strictFilters","strictVariables","lenientIf","globals","keepOutputType","operatorsTrie","normalizeDirectoryList","list","_.isArray","_.isString","map","fs.resolve","tslib_1.__extends","LiquidError","err","originalError","context","token","line","lines","input","begin","Math","max","min","_\r\n        .range","lineNumber","_.padStart","join","mkContext","message","msg","file","_a","col","mkMessage","stack","_super","_this","name","update","RenderError","obj","tpl","variableName","LookupType","Context","registers","_i","keys","getRegister","keyValues","forEach","setRegister","tslib_1.__spread","environments","scopes","reduce","__assign","paths","scope","findScope","getFromScope","toLiquid","liquidMethodMissing","readSize","readFirst","readLast","readProperty","InternalUndefinedVariableError","candidate","env","sync","Loader","currentFile","options","dirs","candidates","Root","_c","existsSync","exists","_e","lookupError","isRelativePath","startsWith","enforceRoot","shouldLoadRelative","referenced","dirname","dirs_1","dir","dirs_2","fallback","segments","roots","code","SimpleEmitter","html","buffer","createResolvedThenable","ret","then","catch","createRejectedThenable","toThenable","isThenable","throw","return","isAsyncIterator","state","done","e","toPromise","x","KeepingTypeEmitter","TokenKind","Render","templates","emitter","StreamedEmitter","renderTemplates","error","stream","templates_1","render","is","e_1","isDelimitedToken","getKind","Delimited","isOperatorToken","Operator","isHTMLToken","HTML","isOutputToken","Output","isTagToken","Tag","isQuotedToken","Quoted","isLiteralToken","Literal","isNumberToken","Number","isPropertyAccessToken","PropertyAccess","isWordToken","Word","isRangeToken","Range","kind","ParseStream","cb","handlers","event","h","trigger","stopRequested","tokens","shift","template","parseToken","assert","predicate","AssertionError","NullDrop","EmptyDrop","BlankDrop","nil","literalValues","true","false","null","empty","blank","rHex","rOct","escapeChar","f","t","v","hexVal","parseStringLiteral","j","fromCharCode","Expression","lenient","operands","postfix","TypeGuards.isOperatorToken","_f","result","lhs","rhs","impl","operator","evalOperatorToken","evalToken","ops","tokens_1","getPrecedence","toPostfix","TypeGuards.isPropertyAccessToken","props","prop","get","propertyName","UndefinedVariableError","evalPropertyAccessToken","TypeGuards.isRangeToken","low","high","evalRangeToken","TypeGuards.isLiteralToken","literal","evalLiteralToken","TypeGuards.isNumberToken","whole","content","decimal","evalNumberToken","TypeGuards.isWordToken","getText","TypeGuards.isQuotedToken","evalQuotedToken","Token","slice","row","trimLeft","trimRight","tl","tr","trim","mask","charAt","IdentifierToken","allowSign","precedence","OperatorToken","variable","args","Filter","Hash","HTMLToken","DelimitedToken","Tokenizer","readExpressionTokens","operand","readValue","p","N","readOperator","operand_1","skipBlank","info","matchOperator","filters","filter","readFilter","peek","snapshot","readIdentifier","readFilterArg","FilterToken","readTopLevelToken","inRaw","whiteSpaceCtrl","rawBeginAt","readEndrawOrRawContent","match","readTagToken","readOutputToken","readHTMLToken","readToDelimiter","mkError","TagToken","delimiter","peekType","readQuoted","rmatch","OutputToken","leftPos","readTo","TokenizationError","JSON","substr","ellipsis","console","warn","hashes","hash","readHash","HashToken","readRange","PropertyAccessToken","LiteralToken","NumberToken","readValueOrThrow","RangeToken","escaped","QuotedToken","word","pattern","tokenizer","remaining","_g","markup","readHashes","argv","apply","liquid","Value","initial","evaluate","readExpression","readFilters","TemplateImpl","tags","create","parse","getContent","Parser","readTopLevelTokens","parseTokens","remainTokens","ParseError","loader","read","_parseFile","lookup","readFileSync","readFile","parseFile","_parseFileCached","advance","bottom","_evalValue","toEnumerable","toArray","ForloopDrop","collection","MODIFIERS","inStr","elseTemplates","parser","parseStream","on","renderer","modifiers","orderedFilterParameters","includes","modifier","count","offset","reverse","reversed","forloop","collection_1","item","tagToken","quoted","readVariableName","BlockMode","cond","cases","branch","parseFilePath","renderFilePath","keyword","beforeAs","alias","childCtx","_parsePartialFile","TypeError","tpls","TypeGuards.isHTMLToken","readFileName","Array","withVar","saved","saveRegister","OUTPUT","restoreRegister","group","fingerprint","groups","idx","branches","_parseLayoutFile","STORE","blocks","parent","BlockDrop","superBlockRender","exec","block","blockRender","getBlockRender","renderCurrent","superBlock","renderChild","TablerowloopDrop","floor","cols","col0","assign","for","For","capture","case","Case","comment","include","decrement","increment","cycle","if","If","layout","raw","tablerow","tmp","tablerowloop","unless","test_1","break","continue","escapeMap","&","\"","'","unescapeMap","&amp;","&lt;","&gt;","&#34;","&#39;","escape","m","abs","atLeast","atMost","ceil","rFormat","monthNames","dayNames","monthNamesShort","abbr","dayNamesShort","suffixes","1","2","3","default","getDayOfYear","d","num","getMonth","year","getFullYear","isLeapYear","getDate","getWeekOfYear","startDay","now","getDay","Date","padWidths","H","I","L","M","S","U","W","padChars","A","B","P","formatCodes","toLocaleString","C","parseInt","substring","century","getHours","getMilliseconds","getMinutes","width","padEnd","q","index","getSuffix","s","round","getSeconds","u","w","toLocaleDateString","X","toLocaleTimeString","y","Y","z","nOffset","getTimezoneOffset","flags","%","format","flagStr","conversion","convert","flagStr_1","padChar","padWidth","toUpperCase","some","changeCase","hostTimezoneOffset","ISO8601_TIMEZONE_PATTERN","TimezoneDate","timezoneOffset","dateString","sign","hours","minutes","delta","init","diff","time","getTime","unescape","amp","pow","property","sort","decodeURIComponent","encodeURIComponent","arrayLast","getValue","concat","expected","date","isNaN","isValidDate","createDateFixedToTimezone","formatStr","output","strftime","arguments","replacement","arg1","arg2","o","TagMap","impls","FilterMap","Liquid","_render","renderTemplatesToNodeStream","_parseAndRender","Partials","Layouts","parseFileSync","renderSync","renderToNodeStream","set","tag","plugin","self","firstCall","filePath","callback","unshift","renderFile","fullOptions","applyDefault","normalize","builtinTags","conf","registerTag","builtinFilters","registerFilter"],"mappings":"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"}